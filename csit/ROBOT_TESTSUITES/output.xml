<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.5 on win32)" generated="20201009 18:03:29.190" rpa="false">
<suite id="s1" name="SINGLE CPE HYBRID SOLUTION TEST" source="C:\Softwares_mine\Code_base\NOVITAS_SDWAN_AUTOMATION_py3\csit\ROBOT_TESTSUITES\SINGLE_CPE_HYBRID_SOLUTION_TEST.robot">
<kw name="STARTUP" type="setup">
<doc>Make connecection to Versa devices</doc>
<kw name="Login" library="VD1">
<status status="PASS" starttime="20201009 18:04:10.935" endtime="20201009 18:04:21.693"></status>
</kw>
<kw name="Get Data Dict" library="VD1">
<assign>
<var>${VD1}</var>
</assign>
<msg timestamp="20201009 18:04:21.694" level="INFO">${VD1} = {'ndb': {}, 'topofile': 'Devices.yml', 'Device_name': 'POD1_VD1', 'POD': 1, 'device_type': 'versa_director', 'MIN_SW_VERSION': '16.1R2-S9', 'mgmt_ip': '10.91.127.194', 'username': 'Automated', 'passwo...</msg>
<status status="PASS" starttime="20201009 18:04:21.693" endtime="20201009 18:04:21.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM1}</arg>
</arguments>
<msg timestamp="20201009 18:04:21.695" level="INFO">${VM1} = CPE11_LAN_HOST1</msg>
<status status="PASS" starttime="20201009 18:04:21.694" endtime="20201009 18:04:21.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM2}</arg>
</arguments>
<msg timestamp="20201009 18:04:21.696" level="INFO">${VM2} = CPE12_LAN_HOST1</msg>
<status status="PASS" starttime="20201009 18:04:21.695" endtime="20201009 18:04:21.696"></status>
</kw>
<kw name="Cross Login" library="CPE1">
<msg timestamp="20201009 18:04:53.087" level="INFO">ssh admin@20.20.90.11
admin@20.20.90.11's password: 

             .---.,
            (      ``.
       _     \        )    __      ________ _____   _____
      (  `.   \      /     \ \    / /  ____|  __ \ / ____|  /\
       \    `. )    /       \ \  / /| |__  | |__) | (___   /  \
        \     |    /         \ \/ / |  __| |  _  / \___ \ / /\ \
         \    |   /           \  /  | |____| | \ \ ____) / ____ \
          \   |  /             \/   |______|_|  \_\_____/_/    \_\
           \  | /
            \_|/                     ___ _    _____  ___   ___  _ ___
                                    | __| |  | __\ \/ | \ / / \| | __|
                                    | _|| |__| _| &gt;  &lt; \ V /| .` | _|
                                    |_| |____|___/_/\_\ \_/ |_|\_|_|


Versa FlexVNF software
Release     :	16.1R2 (S9)
Release date:	20190628
Package ID  :	80561de	

Last login: Fri Oct  9 11:55:11 2020 from 10.92.116.67
admin@CPE11-HKG-HYBRD-IPC00190:~$ 
doing redispatch
set idle-timeout 0
[ok][2020-10-09 12:27:18]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:04:21.696" endtime="20201009 18:04:53.088"></status>
</kw>
<kw name="Cross Login" library="CPE2">
<msg timestamp="20201009 18:05:24.393" level="INFO">ssh admin@20.20.90.12
admin@20.20.90.12's password: 

             .---.,
            (      ``.
       _     \        )    __      ________ _____   _____
      (  `.   \      /     \ \    / /  ____|  __ \ / ____|  /\
       \    `. )    /       \ \  / /| |__  | |__) | (___   /  \
        \     |    /         \ \/ / |  __| |  _  / \___ \ / /\ \
         \    |   /           \  /  | |____| | \ \ ____) / ____ \
          \   |  /             \/   |______|_|  \_\_____/_/    \_\
           \  | /
            \_|/                     ___ _    _____  ___   ___  _ ___
                                    | __| |  | __\ \/ | \ / / \| | __|
                                    | _|| |__| _| &gt;  &lt; \ V /| .` | _|
                                    |_| |____|___/_/\_\ \_/ |_|\_|_|


Versa FlexVNF software
Release     :	16.1R2 (S9)
Release date:	20190628
Package ID  :	80561de	

Last login: Fri Oct  9 11:55:27 2020 from 10.92.116.67
admin@CPE12-HKG-HYBRD-IPC00190:~$ 
doing redispatch
set idle-timeout 0
[ok][2020-10-09 12:27:34]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:04:53.089" endtime="20201009 18:05:24.393"></status>
</kw>
<kw name="Connect And Reserve Ports" library="spirent1">
<msg timestamp="20201009 18:05:40.912" level="INFO">reserved ports 10/1 : port1 : port_handle[0]

 reserved ports 10/2 : port2 : port_handle[1]
***** run sth.interface_config successfully
***** run sth.interface_config successfully</msg>
<status status="PASS" starttime="20201009 18:05:24.393" endtime="20201009 18:05:40.912"></status>
</kw>
<kw name="Get Device Info" library="CPE1">
<assign>
<var>${CPE1_dev_info_on_vd}</var>
</assign>
<msg timestamp="20201009 18:05:41.828" level="INFO">${CPE1_dev_info_on_vd} = {'name': 'CPE11-HKG-HYBRD-IPC00190', 'uuid': 'ff23f34f-c1a9-4013-9d12-eb3df30c8c2d', 'ipAddress': '20.20.90.11', 'ownerOrg': 'IPC00190', 'type': 'branch', 'ping_status': 'REACHABLE', 'sync_status': 'I...</msg>
<status status="PASS" starttime="20201009 18:05:40.912" endtime="20201009 18:05:41.828"></status>
</kw>
<kw name="Get Data Dict" library="CPE1">
<assign>
<var>${CPE1}</var>
</assign>
<msg timestamp="20201009 18:05:41.829" level="INFO">${CPE1} = {'ndb': {}, 'topofile': 'Devices.yml', 'Device_name': 'CPE11-HKG-HYBRD-IPC00190', 'POD': 1, 'Solution_type': 'SINGLE-CPE-HYBRID', 'Site_id': 4275, 'Serial_Number': 'CPE11INOVA90', 'MIN_SW_VERSION': '1...</msg>
<status status="PASS" starttime="20201009 18:05:41.828" endtime="20201009 18:05:41.829"></status>
</kw>
<kw name="Get Data Dict" library="CPE2">
<assign>
<var>${CPE2}</var>
</assign>
<msg timestamp="20201009 18:05:41.829" level="INFO">${CPE2} = {'ndb': {}, 'topofile': 'Devices.yml', 'Device_name': 'CPE12-HKG-HYBRD-IPC00190', 'POD': 1, 'Solution_type': 'SINGLE-CPE-HYBRID', 'Site_id': 4279, 'Serial_Number': 'CPE12NOVD90', 'MIN_SW_VERSION': '16...</msg>
<status status="PASS" starttime="20201009 18:05:41.829" endtime="20201009 18:05:41.829"></status>
</kw>
<kw name="Create Controller List" library="CPE1">
<arguments>
<arg>${CPE1['ORG_NAME']}</arg>
<arg>${CPE1['ORG_ID']}</arg>
<arg>${CPE1['NO_OF_VRFS']}</arg>
<arg>${CPE1['NODE']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:05:41.830" endtime="20201009 18:05:41.843"></status>
</kw>
<kw name="Create Gateway List" library="CPE1">
<arguments>
<arg>${CPE1['ORG_NAME']}</arg>
<arg>${CPE1['ORG_ID']}</arg>
<arg>${CPE1['NO_OF_VRFS']}</arg>
<arg>${CPE1['NODE']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:05:41.843" endtime="20201009 18:05:41.861"></status>
</kw>
<kw name="Create Cpe Data" library="CPE1">
<status status="PASS" starttime="20201009 18:05:41.861" endtime="20201009 18:05:41.862"></status>
</kw>
<kw name="Create Controller List" library="CPE2">
<arguments>
<arg>${CPE2['ORG_NAME']}</arg>
<arg>${CPE2['ORG_ID']}</arg>
<arg>${CPE2['NO_OF_VRFS']}</arg>
<arg>${CPE2['NODE']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:05:41.862" endtime="20201009 18:05:41.873"></status>
</kw>
<kw name="Create Gateway List" library="CPE2">
<arguments>
<arg>${CPE2['ORG_NAME']}</arg>
<arg>${CPE2['ORG_ID']}</arg>
<arg>${CPE2['NO_OF_VRFS']}</arg>
<arg>${CPE2['NODE']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:05:41.873" endtime="20201009 18:05:41.883"></status>
</kw>
<kw name="Create Cpe Data" library="CPE2">
<status status="PASS" starttime="20201009 18:05:41.883" endtime="20201009 18:05:41.884"></status>
</kw>
<kw name="Get Data Dict" library="CPE1">
<assign>
<var>${CPE1}</var>
</assign>
<msg timestamp="20201009 18:05:41.884" level="INFO">${CPE1} = {'ndb': {'NV-WC01-N1-HKG': {'DEVICE_NAME': 'NV-WC01-N1-HKG', 'POD': 1, 'NODE': 'HKG', 'MANAGEMENT_NW_SUBNET': '10.91.140.0/22', 'ESP_IP': '10.90.64.1', 'VXLAN_IP': '10.90.0.1', 'AUTH_STRING': 'NV-WC01...</msg>
<status status="PASS" starttime="20201009 18:05:41.884" endtime="20201009 18:05:41.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CPE1}</arg>
</arguments>
<msg timestamp="20201009 18:05:41.886" level="INFO">${CPE1} = {'ndb': {'NV-WC01-N1-HKG': {'DEVICE_NAME': 'NV-WC01-N1-HKG', 'POD': 1, 'NODE': 'HKG', 'MANAGEMENT_NW_SUBNET': '10.91.140.0/22', 'ESP_IP': '10.90.64.1', 'VXLAN_IP': '10.90.0.1', 'AUTH_STRING': 'NV-WC01...</msg>
<status status="PASS" starttime="20201009 18:05:41.885" endtime="20201009 18:05:41.886"></status>
</kw>
<kw name="Get Data Dict" library="CPE2">
<assign>
<var>${CPE2}</var>
</assign>
<msg timestamp="20201009 18:05:41.886" level="INFO">${CPE2} = {'ndb': {'NV-WC01-N1-HKG': {'DEVICE_NAME': 'NV-WC01-N1-HKG', 'POD': 1, 'NODE': 'HKG', 'MANAGEMENT_NW_SUBNET': '10.91.140.0/22', 'ESP_IP': '10.90.64.1', 'VXLAN_IP': '10.90.0.1', 'AUTH_STRING': 'NV-WC01...</msg>
<status status="PASS" starttime="20201009 18:05:41.886" endtime="20201009 18:05:41.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CPE2}</arg>
</arguments>
<msg timestamp="20201009 18:05:41.887" level="INFO">${CPE2} = {'ndb': {'NV-WC01-N1-HKG': {'DEVICE_NAME': 'NV-WC01-N1-HKG', 'POD': 1, 'NODE': 'HKG', 'MANAGEMENT_NW_SUBNET': '10.91.140.0/22', 'ESP_IP': '10.90.64.1', 'VXLAN_IP': '10.90.0.1', 'AUTH_STRING': 'NV-WC01...</msg>
<status status="PASS" starttime="20201009 18:05:41.886" endtime="20201009 18:05:41.887"></status>
</kw>
<kw name="VM Pre Op" library="VM1">
<msg timestamp="20201009 18:05:51.049" level="INFO">sathish@VM1:~$
linux: root@VM1:~#
None</msg>
<status status="PASS" starttime="20201009 18:05:41.887" endtime="20201009 18:05:51.049"></status>
</kw>
<kw name="VM Pre Op" library="VM2">
<msg timestamp="20201009 18:05:59.879" level="INFO">sathish@CPE12-VM1:~$
linux: root@CPE12-VM1:~#
None</msg>
<status status="PASS" starttime="20201009 18:05:51.049" endtime="20201009 18:05:59.879"></status>
</kw>
<kw name="Get Data Dict" library="VM1">
<assign>
<var>${VM1}</var>
</assign>
<msg timestamp="20201009 18:05:59.894" level="INFO">${VM1} = {'device_name': 'CPE11_LAN_HOST1', 'data':               DUTs        mgmt_ip username password device_type LAN_INTF START_VLAN START_LAN_IP_SUBNET NO_OF_VRFS
0  CPE11_LAN_HOST1  10.91.125.181  sathish...</msg>
<status status="PASS" starttime="20201009 18:05:59.879" endtime="20201009 18:05:59.894"></status>
</kw>
<kw name="Get Data Dict" library="VM2">
<assign>
<var>${VM2}</var>
</assign>
<msg timestamp="20201009 18:05:59.910" level="INFO">${VM2} = {'device_name': 'CPE12_LAN_HOST1', 'data':               DUTs        mgmt_ip username password device_type LAN_INTF START_VLAN START_LAN_IP_SUBNET NO_OF_VRFS
1  CPE12_LAN_HOST1  10.91.125.182  sathish...</msg>
<status status="PASS" starttime="20201009 18:05:59.895" endtime="20201009 18:05:59.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM1}</arg>
</arguments>
<msg timestamp="20201009 18:05:59.946" level="INFO">${VM1} = {'device_name': 'CPE11_LAN_HOST1', 'data':               DUTs        mgmt_ip username password device_type LAN_INTF START_VLAN START_LAN_IP_SUBNET NO_OF_VRFS
0  CPE11_LAN_HOST1  10.91.125.181  sathish...</msg>
<status status="PASS" starttime="20201009 18:05:59.910" endtime="20201009 18:05:59.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${VM2}</arg>
</arguments>
<msg timestamp="20201009 18:05:59.976" level="INFO">${VM2} = {'device_name': 'CPE12_LAN_HOST1', 'data':               DUTs        mgmt_ip username password device_type LAN_INTF START_VLAN START_LAN_IP_SUBNET NO_OF_VRFS
1  CPE12_LAN_HOST1  10.91.125.182  sathish...</msg>
<status status="PASS" starttime="20201009 18:05:59.947" endtime="20201009 18:05:59.977"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${VM1['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20201009 18:05:59.978" level="INFO">${gw} = 192.169.101.1</msg>
<status status="PASS" starttime="20201009 18:05:59.977" endtime="20201009 18:05:59.978"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20201009 18:05:59.979" level="INFO">${vlan} = 600</msg>
<status status="PASS" starttime="20201009 18:05:59.978" endtime="20201009 18:05:59.979"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20201009 18:05:59.980" level="INFO">${destination_nw} = 192.169.111.0/24</msg>
<status status="PASS" starttime="20201009 18:05:59.979" endtime="20201009 18:05:59.980"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>sudo ip route add ${destination_nw} via ${gw} dev ${VM1['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:05:59.980" endtime="20201009 18:06:00.396"></status>
</kw>
<status status="PASS" starttime="20201009 18:05:59.977" endtime="20201009 18:06:00.396"></status>
</kw>
<status status="PASS" starttime="20201009 18:05:59.977" endtime="20201009 18:06:00.396"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${VM2['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20201009 18:06:00.398" level="INFO">${gw} = 192.169.111.1</msg>
<status status="PASS" starttime="20201009 18:06:00.398" endtime="20201009 18:06:00.398"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20201009 18:06:00.399" level="INFO">${vlan} = 610</msg>
<status status="PASS" starttime="20201009 18:06:00.399" endtime="20201009 18:06:00.399"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20201009 18:06:00.400" level="INFO">${destination_nw} = 192.169.101.0/24</msg>
<status status="PASS" starttime="20201009 18:06:00.399" endtime="20201009 18:06:00.400"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>sudo ip route add ${destination_nw} via ${gw} dev ${VM2['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:06:00.400" endtime="20201009 18:06:00.813"></status>
</kw>
<status status="PASS" starttime="20201009 18:06:00.397" endtime="20201009 18:06:00.813"></status>
</kw>
<status status="PASS" starttime="20201009 18:06:00.396" endtime="20201009 18:06:00.813"></status>
</kw>
<kw name="SPIRENT_STARTUP">
<kw name="Create Device" library="spirent1">
<arguments>
<arg>port=0</arg>
<arg>vlanid=${CPE1['lan'][1]['vlan']}</arg>
<arg>intf_ip_addr=${CPE1['lan'][1]['third_host']}</arg>
<arg>gateway_ip_addr=${CPE1['lan'][1]['first_host']}</arg>
</arguments>
<assign>
<var>${device1}</var>
</assign>
<msg timestamp="20201009 18:06:02.505" level="INFO">***** run sth.emulation_device_config successfully</msg>
<msg timestamp="20201009 18:06:02.505" level="INFO">${device1} = {'handle': 'host1', 'status': '1', 'port': 'port1', 'gateway_ip_addr': '192.169.101.1', 'vlanid': 600, 'intf_ip_addr': '192.169.101.3'}</msg>
<status status="PASS" starttime="20201009 18:06:00.815" endtime="20201009 18:06:02.505"></status>
</kw>
<kw name="Create Device" library="spirent1">
<arguments>
<arg>port=1</arg>
<arg>vlanid=${CPE2['lan'][1]['vlan']}</arg>
<arg>intf_ip_addr=${CPE2['lan'][1]['third_host']}</arg>
<arg>gateway_ip_addr=${CPE2['lan'][1]['first_host']}</arg>
</arguments>
<assign>
<var>${device2}</var>
</assign>
<msg timestamp="20201009 18:06:03.066" level="INFO">***** run sth.emulation_device_config successfully</msg>
<msg timestamp="20201009 18:06:03.066" level="INFO">${device2} = {'handle': 'host2', 'status': '1', 'port': 'port2', 'gateway_ip_addr': '192.169.111.1', 'vlanid': 610, 'intf_ip_addr': '192.169.111.3'}</msg>
<status status="PASS" starttime="20201009 18:06:02.505" endtime="20201009 18:06:03.066"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2000</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream1}</var>
</assign>
<msg timestamp="20201009 18:06:08.160" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:08.160" level="INFO">${stream1} = {'stream_id': 'streamblock1', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:03.066" endtime="20201009 18:06:08.160"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2001</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream2}</var>
</assign>
<msg timestamp="20201009 18:06:12.361" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:12.361" level="INFO">${stream2} = {'stream_id': 'streamblock2', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:08.160" endtime="20201009 18:06:12.361"></status>
</kw>
<kw name="Create Udp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=2002</arg>
<arg>rate_mbps=2</arg>
</arguments>
<assign>
<var>${stream3}</var>
</assign>
<msg timestamp="20201009 18:06:15.955" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:15.955" level="INFO">${stream3} = {'stream_id': 'streamblock3', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:12.361" endtime="20201009 18:06:15.955"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3001</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=46</arg>
</arguments>
<assign>
<var>${premium_tcp_stream1}</var>
</assign>
<msg timestamp="20201009 18:06:19.343" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:19.343" level="INFO">${premium_tcp_stream1} = {'stream_id': 'streamblock4', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:15.955" endtime="20201009 18:06:19.343"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3002</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=26</arg>
</arguments>
<assign>
<var>${business1_tcp_stream1}</var>
</assign>
<msg timestamp="20201009 18:06:22.955" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:22.955" level="INFO">${business1_tcp_stream1} = {'stream_id': 'streamblock5', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:19.343" endtime="20201009 18:06:22.955"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3003</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=18</arg>
</arguments>
<assign>
<var>${business2_tcp_stream1}</var>
</assign>
<msg timestamp="20201009 18:06:26.615" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:26.615" level="INFO">${business2_tcp_stream1} = {'stream_id': 'streamblock6', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:22.955" endtime="20201009 18:06:26.615"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=3004</arg>
<arg>rate_mbps=1</arg>
<arg>ip_dscp=10</arg>
</arguments>
<assign>
<var>${business3_tcp_stream1}</var>
</assign>
<msg timestamp="20201009 18:06:30.458" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:30.458" level="INFO">${business3_tcp_stream1} = {'stream_id': 'streamblock7', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:26.615" endtime="20201009 18:06:30.458"></status>
</kw>
<kw name="Create Tcp Stream Block" library="spirent1">
<arguments>
<arg>${device1}</arg>
<arg>${device2}</arg>
<arg>src_port=5000</arg>
<arg>rate_mbps=1</arg>
</arguments>
<assign>
<var>${internet_default_tcp_stream1}</var>
</assign>
<msg timestamp="20201009 18:06:34.394" level="INFO">***** run sth.traffic_config successfully</msg>
<msg timestamp="20201009 18:06:34.394" level="INFO">${internet_default_tcp_stream1} = {'stream_id': 'streamblock8', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:30.458" endtime="20201009 18:06:34.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${device1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.395" level="INFO">${device1} = {'handle': 'host1', 'status': '1', 'port': 'port1', 'gateway_ip_addr': '192.169.101.1', 'vlanid': 600, 'intf_ip_addr': '192.169.101.3'}</msg>
<status status="PASS" starttime="20201009 18:06:34.394" endtime="20201009 18:06:34.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${device2}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.395" level="INFO">${device2} = {'handle': 'host2', 'status': '1', 'port': 'port2', 'gateway_ip_addr': '192.169.111.1', 'vlanid': 610, 'intf_ip_addr': '192.169.111.3'}</msg>
<status status="PASS" starttime="20201009 18:06:34.395" endtime="20201009 18:06:34.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.396" level="INFO">${stream1} = {'stream_id': 'streamblock1', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.396" endtime="20201009 18:06:34.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream2}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.396" level="INFO">${stream2} = {'stream_id': 'streamblock2', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.396" endtime="20201009 18:06:34.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${stream3}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.397" level="INFO">${stream3} = {'stream_id': 'streamblock3', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.397" endtime="20201009 18:06:34.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${premium_tcp_stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.398" level="INFO">${premium_tcp_stream1} = {'stream_id': 'streamblock4', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.398" endtime="20201009 18:06:34.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business1_tcp_stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.399" level="INFO">${business1_tcp_stream1} = {'stream_id': 'streamblock5', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.399" endtime="20201009 18:06:34.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business2_tcp_stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.400" level="INFO">${business2_tcp_stream1} = {'stream_id': 'streamblock6', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.399" endtime="20201009 18:06:34.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${business3_tcp_stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.400" level="INFO">${business3_tcp_stream1} = {'stream_id': 'streamblock7', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.400" endtime="20201009 18:06:34.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${internet_default_tcp_stream1}</arg>
</arguments>
<msg timestamp="20201009 18:06:34.401" level="INFO">${internet_default_tcp_stream1} = {'stream_id': 'streamblock8', 'status': '1'}</msg>
<status status="PASS" starttime="20201009 18:06:34.400" endtime="20201009 18:06:34.401"></status>
</kw>
<status status="PASS" starttime="20201009 18:06:00.813" endtime="20201009 18:06:34.401"></status>
</kw>
<kw name="CREATE FWD PROFILE">
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<assign>
<var>${curr_intf_bw}</var>
</assign>
<msg timestamp="20201009 18:06:35.983" level="INFO">${curr_intf_bw} = {'bandwidth': {'uplink': 30000, 'downlink': 30000}}</msg>
<status status="PASS" starttime="20201009 18:06:34.403" endtime="20201009 18:06:35.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${curr_intf_bw}</arg>
</arguments>
<msg timestamp="20201009 18:06:35.984" level="INFO">${curr_intf_bw} = {'bandwidth': {'uplink': 30000, 'downlink': 30000}}</msg>
<status status="PASS" starttime="20201009 18:06:35.983" endtime="20201009 18:06:35.984"></status>
</kw>
<kw name="Modify Interface Bandwidth" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
<arg>${bw}</arg>
<arg>${bw}</arg>
</arguments>
<msg timestamp="20201009 18:06:37.575" level="INFO">{"bandwidth": {"uplink": "30000", "downlink": "30000"}}
b''
&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:06:35.984" endtime="20201009 18:06:37.576"></status>
</kw>
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:06:37.576" endtime="20201009 18:06:38.073"></status>
</kw>
<kw name="Create Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
<arg>circuit_transmit_utilization=5</arg>
</arguments>
<msg timestamp="20201009 18:06:38.074" level="INFO">
CREATE SLA profile
</msg>
<msg timestamp="20201009 18:06:39.593" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:06:39.593" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE SLA Profile PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:06:39.594" level="INFO">{
	"sla-profile": {
		"name": "SLA112"
		,"circuit-transmit-utilization": "5"
	}
}</msg>
<status status="PASS" starttime="20201009 18:06:38.074" endtime="20201009 18:06:39.594"></status>
</kw>
<kw name="Create Fowarding Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
<arg>${CPE1['WAN1_NAME']}</arg>
<arg>${CPE1['WAN2_NAME']}</arg>
<arg>sla_name=${sla_prf_1}</arg>
<arg>evaluate_continuously=disable</arg>
</arguments>
<msg timestamp="20201009 18:06:39.595" level="INFO">
CREATE FWD PROFILE
</msg>
<msg timestamp="20201009 18:06:41.132" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:06:41.133" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; FORWARDING PROFILE CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<status status="PASS" starttime="20201009 18:06:39.594" endtime="20201009 18:06:41.133"></status>
</kw>
<kw name="Create Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
<arg>ipv4-prefix</arg>
<arg>${CPE1['lan'][1]['third_host']}/32</arg>
</arguments>
<msg timestamp="20201009 18:06:41.134" level="INFO">
CREATE IPaddress Object
</msg>
<msg timestamp="20201009 18:06:42.348" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:06:42.349" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:06:42.349" level="INFO">{
	"address": {
		"name": "src_ip_add_obj11",
		"ipv4-prefix": "192.169.101.3/32"
	}
}</msg>
<status status="PASS" starttime="20201009 18:06:41.133" endtime="20201009 18:06:42.349"></status>
</kw>
<kw name="Create Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
<arg>ipv4-prefix</arg>
<arg>${CPE2['lan'][1]['third_host']}/32</arg>
</arguments>
<msg timestamp="20201009 18:06:42.350" level="INFO">
CREATE IPaddress Object
</msg>
<msg timestamp="20201009 18:06:43.556" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:06:43.556" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:06:43.556" level="INFO">{
	"address": {
		"name": "dst_ip_add_obj11",
		"ipv4-prefix": "192.169.111.3/32"
	}
}</msg>
<status status="PASS" starttime="20201009 18:06:42.349" endtime="20201009 18:06:43.556"></status>
</kw>
<kw name="Create Service Object" library="CPE1">
<arguments>
<arg>${serviceobj_1}</arg>
<arg>${TCP}</arg>
<arg>source_port=2000</arg>
</arguments>
<msg timestamp="20201009 18:06:43.558" level="INFO">
CREATE Service Object
</msg>
<msg timestamp="20201009 18:06:44.826" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:06:44.826" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Service OBJECT CREATION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:06:44.826" level="INFO">{
	"service": {
		"name": "src_port_2000",
		"protocol": "TCP",
		"source-port": "2000"
	}
}</msg>
<status status="PASS" starttime="20201009 18:06:43.557" endtime="20201009 18:06:44.827"></status>
</kw>
<status status="PASS" starttime="20201009 18:06:34.401" endtime="20201009 18:06:44.827"></status>
</kw>
<kw name="Config Devices Qos" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${CPE1['ORG_NAME']}</arg>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<msg timestamp="20201009 18:06:44.830" level="INFO">

STEP :CONFIG QOS
</msg>
<msg timestamp="20201009 18:06:44.873" level="INFO">set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc_nc loss-priority low code-point af41
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc_ef loss-priority low code-point ef
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc_be loss-priority high code-point be
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc13 loss-priority high code-point af31
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc14 loss-priority high code-point af21
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service rw-rules dscp rw-1 forwarding-class fc15 loss-priority high code-point af11

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_nc traffic-class tc0
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_nc queue 0
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_ef traffic-class tc1
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_ef queue 0
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc13 traffic-class tc3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc13 queue 0
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc14 traffic-class tc3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc14 queue 1
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc15 traffic-class tc3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc15 queue 2
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_be traffic-class tc3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service forwarding-class-map fc_be queue 3

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service interfaces vni-0/1 scheduler-map IPC00190
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service interfaces tunnel dscp-rewrite-rule rw-1

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service scheduler-maps IPC00190 traffic-class tc0 scheduler sc_nc
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service scheduler-maps IPC00190 traffic-class tc1 scheduler sc_ef
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service scheduler-maps IPC00190 traffic-class tc3 scheduler sc_be
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service drop-profiles wred-high-drop maximum 128 minimum 64
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service drop-profiles wred-low-drop maximum 128 minimum 96
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service drop-profiles tail-drop maximum 65 minimum 64
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be drop-profile-map loss-priority low drop-profile wred-low-drop
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be drop-profile-map loss-priority high drop-profile wred-high-drop
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be queue 0 weight 6
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be queue 1 weight 4
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be queue 2 weight 4
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_be queue 3 weight 3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_ef
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service schedulers sc_nc drop-profile-map loss-priority low drop-profile tail-drop

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set action allow
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set qos-profile Premium
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source zone zone-list [ Intf-LAN1-Zone ]
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination zone zone-list [ ptvi ]
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set action allow
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set qos-profile Business1
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match source zone zone-list [ Intf-LAN1-Zone ]
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match dscp [ 26 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set action allow
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set qos-profile Business2
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match source zone zone-list [ Intf-LAN1-Zone ]
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match dscp [ 18 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set action allow
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set qos-profile Business3
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match source zone zone-list [ Intf-LAN1-Zone ]
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match dscp [ 10 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set action allow
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set qos-profile Internet-Default
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default match source zone zone-list [ Intf-LAN1-Zone ]


set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service app-qos-policies Default-Policy
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business1 forwarding-class fc13
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business1 loss-priority high
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business1 dscp-rw-enable yes
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business1 dot1p-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business2 forwarding-class fc14
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business2 loss-priority high
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business2 dscp-rw-enable yes
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business2 dot1p-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business3 forwarding-class fc15
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business3 loss-priority high
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business3 dscp-rw-enable yes
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Business3 dot1p-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Internet-Default forwarding-class fc_be
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Internet-Default loss-priority high
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Internet-Default dscp-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Internet-Default dot1p-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Premium forwarding-class fc_ef
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Premium loss-priority low
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Premium dscp-rw-enable yes
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Premium dot1p-rw-enable no
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Routing-Management forwarding-class fc_nc
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Routing-Management loss-priority low
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Routing-Management dscp-rw-enable yes
set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-profiles Routing-Management dot1p-rw-enable no

#move rule to first
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default  first
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 first
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 first
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 first
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
</msg>
<status status="PASS" starttime="20201009 18:06:44.827" endtime="20201009 18:08:14.052"></status>
</kw>
<status status="PASS" starttime="20201009 18:04:10.934" endtime="20201009 18:08:14.052"></status>
</kw>
<test id="s1-t1" name="NV_SINGLE_CPE_HYBRID_SANITY_01">
<kw name="CHECK MPLS WAN INTERFACE UP in CPE1 &amp; CPE2">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['WAN1_INTF']}${unit_o} | match MPLS</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:15.559" level="INFO">${result} = show interfaces brief | tab | match vni-0/1.0 | match MPLS
vni-0/1.0    00:0b:ab:f1:9a:5a  up    up     2       MPLS-WAN-Transport-VR  172.16.7.42/30          
[ok][2020-10-09 12:30:41]
admin@CPE11-HK...</msg>
<status status="PASS" starttime="20201009 18:08:14.055" endtime="20201009 18:08:15.559"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
<arg>up not presnt 2 times</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
<arg>up not presnt 2 times</arg>
</arguments>
<msg timestamp="20201009 18:08:15.560" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:15.560" endtime="20201009 18:08:15.560"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:15.559" endtime="20201009 18:08:15.561"></status>
</kw>
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['WAN1_INTF']}${unit_o} | match MPLS</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:16.865" level="INFO">${result} = show interfaces brief | tab | match vni-0/1.0 | match MPLS
vni-0/1.0    00:0b:ab:f4:4f:60  up    up     2       MPLS-WAN-Transport-VR  172.16.7.46/30    
[ok][2020-10-09 12:30:26]
admin@CPE12-HKG-HYBR...</msg>
<status status="PASS" starttime="20201009 18:08:15.561" endtime="20201009 18:08:16.865"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:16.866" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:16.865" endtime="20201009 18:08:16.866"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:16.865" endtime="20201009 18:08:16.866"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:14.054" endtime="20201009 18:08:16.866"></status>
</kw>
<kw name="CHECK INTERNET WAN INTERFACE UP in CPE1 &amp; CPE2">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['WAN2_INTF']}${unit_o} | match INT</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:18.172" level="INFO">${result} = show interfaces brief | tab | match vni-0/2.0 | match INT
vni-0/2.0    00:0b:ab:f1:9a:5b  up    up     2       INT-WAN-Transport-VR   172.16.6.42/30          
[ok][2020-10-09 12:30:43]
admin@CPE11-HKG...</msg>
<status status="PASS" starttime="20201009 18:08:16.867" endtime="20201009 18:08:18.172"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:18.173" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:18.173" endtime="20201009 18:08:18.174"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:18.172" endtime="20201009 18:08:18.174"></status>
</kw>
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['WAN2_INTF']}${unit_o} | match INT</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:19.477" level="INFO">${result} = show interfaces brief | tab | match vni-0/2.0 | match INT
vni-0/2.0    00:0b:ab:f4:4f:61  up    up     2       INT-WAN-Transport-VR   172.16.6.46/30    
[ok][2020-10-09 12:30:29]
admin@CPE12-HKG-HYBRD...</msg>
<status status="PASS" starttime="20201009 18:08:18.174" endtime="20201009 18:08:19.477"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:19.478" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:19.478" endtime="20201009 18:08:19.479"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:19.478" endtime="20201009 18:08:19.479"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:16.867" endtime="20201009 18:08:19.479"></status>
</kw>
<kw name="CHECK WC1 PTVI INTERFACE STATUS in CPE1">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['ptvi_intf_wc1']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:20.585" level="INFO">${result} = show interfaces brief | tab | match ptvi180
ptvi180      n/a                up    up     2       IPC00190-Control-VR    10.90.64.1/32           
[ok][2020-10-09 12:30:46]
admin@CPE11-HKG-HYBRD-IPC0019...</msg>
<status status="PASS" starttime="20201009 18:08:19.480" endtime="20201009 18:08:20.585"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:20.586" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:20.586" endtime="20201009 18:08:20.587"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:20.585" endtime="20201009 18:08:20.587"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:19.479" endtime="20201009 18:08:20.587"></status>
</kw>
<kw name="CHECK WC2 PTVI INTERFACE STATUS in CPE2">
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['ptvi_intf_wc2']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:21.692" level="INFO">${result} = show interfaces brief | tab | match ptvi181
ptvi181      n/a                up    up     2       IPC00190-Control-VR    10.90.64.11/32    
[ok][2020-10-09 12:30:31]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" starttime="20201009 18:08:20.588" endtime="20201009 18:08:21.692"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:21.693" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:21.692" endtime="20201009 18:08:21.693"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:21.692" endtime="20201009 18:08:21.693"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:20.587" endtime="20201009 18:08:21.693"></status>
</kw>
<kw name="CHECK WC1 PTVI INTERFACE STATUS in CPE1">
<kw name="Get Interface Status" library="CPE1">
<arguments>
<arg>intf_name=${CPE1['ptvi_intf_wc1']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:22.799" level="INFO">${result} = show interfaces brief | tab | match ptvi180
ptvi180      n/a                up    up     2       IPC00190-Control-VR    10.90.64.1/32           
[ok][2020-10-09 12:30:48]
admin@CPE11-HKG-HYBRD-IPC0019...</msg>
<status status="PASS" starttime="20201009 18:08:21.694" endtime="20201009 18:08:22.799"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:22.800" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:22.800" endtime="20201009 18:08:22.800"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:22.799" endtime="20201009 18:08:22.800"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:21.693" endtime="20201009 18:08:22.801"></status>
</kw>
<kw name="CHECK WC2 PTVI INTERFACE STATUS in CPE2">
<kw name="Get Interface Status" library="CPE2">
<arguments>
<arg>intf_name=${CPE2['ptvi_intf_wc2']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:23.908" level="INFO">${result} = show interfaces brief | tab | match ptvi181
ptvi181      n/a                up    up     2       IPC00190-Control-VR    10.90.64.11/32    
[ok][2020-10-09 12:30:33]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt;...</msg>
<status status="PASS" starttime="20201009 18:08:22.802" endtime="20201009 18:08:23.908"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Contain X Times</arg>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<kw name="Should Contain X Times" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` ``count`` times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${up}</arg>
<arg>2</arg>
</arguments>
<msg timestamp="20201009 18:08:23.909" level="INFO">Item found from container 2 times.</msg>
<status status="PASS" starttime="20201009 18:08:23.909" endtime="20201009 18:08:23.909"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:23.908" endtime="20201009 18:08:23.909"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:22.802" endtime="20201009 18:08:23.909"></status>
</kw>
<kw name="CHECK WC1 BGP NEIGHBOR STATUS in CPE1 &amp; CPE2">
<kw name="Get Bgp Nbr Status" library="CPE1">
<arguments>
<arg>nbr_ip=${CPE1['WC1_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:25.422" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      21:20:03   Established     102          10      40938        179
10.90.64.11     21:19:52   Established     ...</msg>
<status status="PASS" starttime="20201009 18:08:23.910" endtime="20201009 18:08:25.422"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:25.428" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      21:20:03   Established     102          10      40938        179
10.90.64.11     21:19:52   Established     106          10      40508        179
[ok][2020-10-09 12:30:51]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:08:25.427" endtime="20201009 18:08:25.428"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:25.429" level="INFO">Established</msg>
<status status="PASS" starttime="20201009 18:08:25.428" endtime="20201009 18:08:25.429"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:25.429" endtime="20201009 18:08:25.430"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:25.429" endtime="20201009 18:08:25.430"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:25.422" endtime="20201009 18:08:25.430"></status>
</kw>
<kw name="Get Bgp Nbr Status" library="CPE2">
<arguments>
<arg>nbr_ip=${CPE2['WC1_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:26.943" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      1d01h01m   Established     111           5      46858        179
10.90.64.11     1d01h01m   Established     ...</msg>
<status status="PASS" starttime="20201009 18:08:25.432" endtime="20201009 18:08:26.943"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:26.944" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.1
10.90.64.1      1d01h01m   Established     111           5      46858        179
10.90.64.11     1d01h01m   Established     115           5      33259        179
[ok][2020-10-09 12:30:36]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:08:26.944" endtime="20201009 18:08:26.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:26.945" level="INFO">Established</msg>
<status status="PASS" starttime="20201009 18:08:26.945" endtime="20201009 18:08:26.945"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:26.946" endtime="20201009 18:08:26.946"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:26.945" endtime="20201009 18:08:26.946"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:26.943" endtime="20201009 18:08:26.947"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:23.910" endtime="20201009 18:08:26.947"></status>
</kw>
<kw name="CHECK WC2 BGP NEIGHBOR STATUS in CPE1 &amp; CPE2">
<kw name="Get Bgp Nbr Status" library="CPE1">
<arguments>
<arg>nbr_ip=${CPE1['WC2_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:28.251" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     21:19:55   Established     106          10      40508        179
[ok][2020-10-09 12:30:54]
admin@CPE11-HKG-...</msg>
<status status="PASS" starttime="20201009 18:08:26.948" endtime="20201009 18:08:28.251"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:28.253" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     21:19:55   Established     106          10      40508        179
[ok][2020-10-09 12:30:54]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:08:28.252" endtime="20201009 18:08:28.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:28.255" level="INFO">Established</msg>
<status status="PASS" starttime="20201009 18:08:28.255" endtime="20201009 18:08:28.255"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:28.257" endtime="20201009 18:08:28.258"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:28.256" endtime="20201009 18:08:28.258"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:28.251" endtime="20201009 18:08:28.258"></status>
</kw>
<kw name="Get Bgp Nbr Status" library="CPE2">
<arguments>
<arg>nbr_ip=${CPE2['WC2_ESP_IP']}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:29.563" level="INFO">${result} = show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     1d01h01m   Established     115           5      33259        179
[ok][2020-10-09 12:30:39]
admin@CPE12-HKG-...</msg>
<status status="PASS" starttime="20201009 18:08:28.258" endtime="20201009 18:08:29.563"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${est}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:29.565" level="INFO">show bgp neighbor org IPC00190 brief IPC00190-Control-VR | match 10.90.64.11
10.90.64.11     1d01h01m   Established     115           5      33259        179
[ok][2020-10-09 12:30:39]
admin@CPE12-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:08:29.564" endtime="20201009 18:08:29.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:29.565" level="INFO">Established</msg>
<status status="PASS" starttime="20201009 18:08:29.565" endtime="20201009 18:08:29.565"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:29.566" endtime="20201009 18:08:29.566"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:29.566" endtime="20201009 18:08:29.566"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:29.563" endtime="20201009 18:08:29.566"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:26.947" endtime="20201009 18:08:29.567"></status>
</kw>
<kw name="CHECK CPE2 LAN ROUTE Present in CPE1">
<kw name="Check Lan Route" library="CPE1">
<arguments>
<arg>lan=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:32.284" level="INFO">${result} = routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.91.0.0/16 192.169.101.9 vni-0/4.600
LA...</msg>
<status status="PASS" starttime="20201009 18:08:29.567" endtime="20201009 18:08:32.284"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>\\+${CPE2['lan'][1]['nw']}\\s+${CPE2['ESP_IP']}</arg>
</arguments>
<assign>
<var>${active_dest_route}</var>
</assign>
<msg timestamp="20201009 18:08:32.285" level="INFO">${active_dest_route} = \+192.169.111.0/24\s+20.20.90.12</msg>
<status status="PASS" starttime="20201009 18:08:32.285" endtime="20201009 18:08:32.285"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${active_dest_route}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:32.287" level="INFO">routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.91.0.0/16 192.169.101.9 vni-0/4.600
LAN1-VRF BGP N/A +10.91.240.0/26 192.169.101.9 vni-0/4.600
LAN1-VRF BGP N/A +123.1.2.3/32 20.20.90.26 Indirect
LAN1-VRF BGP N/A 123.1.2.3/32 40.90.1.2 Indirect
LAN1-VRF BGP N/A +123.1.2.4/32 192.169.101.9 vni-0/4.600
LAN1-VRF BGP N/A +140.30.40.30/32 20.20.90.26 Indirect
LAN1-VRF BGP N/A 140.30.40.30/32 40.90.1.2 Indirect
LAN1-VRF conn N/A +169.254.0.2/31 0.0.0.0 tvi-0/603.0
LAN1-VRF local N/A +169.254.0.3/32 0.0.0.0 directly connected
LAN1-VRF conn N/A +192.169.101.0/24 0.0.0.0 vni-0/4.600
LAN1-VRF BGP N/A 192.169.101.0/24 192.169.101.9 vni-0/4.600
LAN1-VRF local N/A +192.169.101.1/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.169.111.0/24 20.20.90.12 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.170.1.0/24 20.20.90.26 Indirect
LAN1-VRF BGP N/A 192.170.1.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.170.11.0/24 20.20.90.27 Indirect
LAN1-VRF BGP N/A 192.170.11.0/24 40.90.6.1 Indirect
LAN1-VRF BGP N/A 192.170.11.0/24 40.90.6.2 Indirect
LAN1-VRF BGP N/A +193.90.2.0/30 40.90.1.2 Indirect
</msg>
<status status="PASS" starttime="20201009 18:08:32.286" endtime="20201009 18:08:32.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:32.287" level="INFO">\+192.169.111.0/24\s+20.20.90.12</msg>
<status status="PASS" starttime="20201009 18:08:32.287" endtime="20201009 18:08:32.287"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:32.288" endtime="20201009 18:08:32.288"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:32.287" endtime="20201009 18:08:32.288"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:32.286" endtime="20201009 18:08:32.288"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:29.567" endtime="20201009 18:08:32.289"></status>
</kw>
<kw name="CHECK CPE1 LAN ROUTE Present in CPE2">
<kw name="Check Lan Route" library="CPE2">
<arguments>
<arg>lan=1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:35.200" level="INFO">${result} = routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VR...</msg>
<status status="PASS" starttime="20201009 18:08:32.289" endtime="20201009 18:08:35.200"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>\\+${CPE1['lan'][1]['nw']}\\s+${CPE1['ESP_IP']}</arg>
</arguments>
<assign>
<var>${active_dest_route}</var>
</assign>
<msg timestamp="20201009 18:08:35.201" level="INFO">${active_dest_route} = \+192.169.101.0/24\s+20.20.90.11</msg>
<status status="PASS" starttime="20201009 18:08:35.200" endtime="20201009 18:08:35.201"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=${active_dest_route}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:35.202" level="INFO">routing_instance     Prot     Type     DestAddresswithMask     Nexthop     Interfacename
LAN1-VRF BGP N/A +0.0.0.0/0 169.254.0.2 tvi-0/603.0
LAN1-VRF BGP N/A +10.90.47.64/30 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.91.0.0/16 20.20.90.11 Indirect
LAN1-VRF BGP N/A 10.91.0.0/16 40.90.1.2 Indirect
LAN1-VRF BGP N/A +10.91.240.0/26 20.20.90.11 Indirect
LAN1-VRF BGP N/A 10.91.240.0/26 40.90.1.2 Indirect
LAN1-VRF BGP N/A +123.1.2.3/32 20.20.90.26 Indirect
LAN1-VRF BGP N/A 123.1.2.3/32 40.90.1.2 Indirect
LAN1-VRF BGP N/A +123.1.2.4/32 20.20.90.11 Indirect
LAN1-VRF BGP N/A 123.1.2.4/32 40.90.1.2 Indirect
LAN1-VRF BGP N/A +140.30.40.30/32 20.20.90.26 Indirect
LAN1-VRF BGP N/A 140.30.40.30/32 40.90.1.2 Indirect
LAN1-VRF conn N/A +169.254.0.2/31 0.0.0.0 tvi-0/603.0
LAN1-VRF local N/A +169.254.0.3/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.169.101.0/24 20.20.90.11 Indirect
LAN1-VRF BGP N/A 192.169.101.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A 192.169.111.0/24 40.90.1.2 Indirect
LAN1-VRF conn N/A +192.169.111.0/24 0.0.0.0 vni-0/4.610
LAN1-VRF local N/A +192.169.111.1/32 0.0.0.0 directly connected
LAN1-VRF BGP N/A +192.170.1.0/24 20.20.90.26 Indirect
LAN1-VRF BGP N/A 192.170.1.0/24 40.90.1.2 Indirect
LAN1-VRF BGP N/A +192.170.11.0/24 20.20.90.27 Indirect
LAN1-VRF BGP N/A 192.170.11.0/24 40.90.6.1 Indirect
LAN1-VRF BGP N/A 192.170.11.0/24 40.90.6.2 Indirect
LAN1-VRF BGP N/A +193.90.2.0/30 40.90.1.2 Indirect
</msg>
<status status="PASS" starttime="20201009 18:08:35.201" endtime="20201009 18:08:35.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:35.202" level="INFO">\+192.169.101.0/24\s+20.20.90.11</msg>
<status status="PASS" starttime="20201009 18:08:35.202" endtime="20201009 18:08:35.202"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:35.203" endtime="20201009 18:08:35.203"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:35.203" endtime="20201009 18:08:35.204"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:35.201" endtime="20201009 18:08:35.204"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:32.289" endtime="20201009 18:08:35.204"></status>
</kw>
<doc>SANITY CHECKS on vCPE</doc>
<tags>
<tag>SANITY01</tag>
</tags>
<status status="PASS" starttime="20201009 18:08:14.053" endtime="20201009 18:08:35.204" critical="yes"></status>
</test>
<test id="s1-t2" name="NV_SINGLE_CPE_HYBRID_SANITY_02">
<kw name="Ping Test VM1 to VM2(1 LAN)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:08:35.207" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" starttime="20201009 18:08:35.206" endtime="20201009 18:08:35.207"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:40.036" level="INFO">sudo ping 192.169.111.2 -c 5
sudo ping 192.169.111.2 -c 5
PING 192.169.111.2 (192.169.111.2) 56(84) bytes of data.
64 bytes from 192.169.111.2: icmp_seq=1 ttl=62 time=2.36 ms
64 bytes from 192.169.111.2: icmp_seq=2 ttl=62 time=2.40 ms
64 bytes from 192.169.111.2: icmp_seq=3 ttl=62 time=2.36 ms
64 bytes from 192.169.111.2: icmp_seq=4 ttl=62 time=2.12 ms
64 bytes from 192.169.111.2: icmp_seq=5 ttl=62 time=1.79 ms

--- 192.169.111.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4006ms
rtt min/avg/max/mdev = 1.796/2.210/2.404/0.231 ms
root@VM1:~#</msg>
<msg timestamp="20201009 18:08:40.036" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20201009 18:08:35.207" endtime="20201009 18:08:40.036"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:40.038" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:40.037" endtime="20201009 18:08:40.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:40.039" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:40.038" endtime="20201009 18:08:40.039"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:40.039" endtime="20201009 18:08:40.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:40.039" endtime="20201009 18:08:40.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:40.036" endtime="20201009 18:08:40.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:35.206" endtime="20201009 18:08:40.040"></status>
</kw>
<kw name="Ping Test VM2 to VM1(1 LAN)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:08:40.042" level="INFO">${destip} = 192.169.101.2</msg>
<status status="PASS" starttime="20201009 18:08:40.042" endtime="20201009 18:08:40.042"></status>
</kw>
<kw name="Shell Ping" library="VM2">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:44.972" level="INFO">sudo ping 192.169.101.2 -c 5
sudo ping 192.169.101.2 -c 5
PING 192.169.101.2 (192.169.101.2) 56(84) bytes of data.
64 bytes from 192.169.101.2: icmp_seq=1 ttl=62 time=2.98 ms
64 bytes from 192.169.101.2: icmp_seq=2 ttl=62 time=1.94 ms
64 bytes from 192.169.101.2: icmp_seq=3 ttl=62 time=2.20 ms
64 bytes from 192.169.101.2: icmp_seq=4 ttl=62 time=2.06 ms
64 bytes from 192.169.101.2: icmp_seq=5 ttl=62 time=2.29 ms

--- 192.169.101.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4005ms
rtt min/avg/max/mdev = 1.947/2.299/2.985/0.368 ms
root@CPE12-VM1:~#</msg>
<msg timestamp="20201009 18:08:44.972" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20201009 18:08:40.043" endtime="20201009 18:08:44.972"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:44.975" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:44.974" endtime="20201009 18:08:44.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:44.975" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:44.975" endtime="20201009 18:08:44.975"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:44.976" endtime="20201009 18:08:44.978"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:44.976" endtime="20201009 18:08:44.978"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:44.972" endtime="20201009 18:08:44.978"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:40.041" endtime="20201009 18:08:44.979"></status>
</kw>
<doc>Ping test CPE1 LAN1 VM to CPE2 LAN1 VM</doc>
<tags>
<tag>PING</tag>
</tags>
<status status="PASS" starttime="20201009 18:08:35.205" endtime="20201009 18:08:44.980" critical="yes"></status>
</test>
<test id="s1-t3" name="NV_SINGLE_CPE_HYBRID_SANITY_03">
<kw name="Ping Test VM1 to VM2(ALL LANS)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="${vlan} IN RANGE [ 1 | ${VM1['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${vlan} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${vlan}]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:08:44.990" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" starttime="20201009 18:08:44.989" endtime="20201009 18:08:44.990"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:49.822" level="INFO">sudo ping 192.169.111.2 -c 5
sudo ping 192.169.111.2 -c 5
PING 192.169.111.2 (192.169.111.2) 56(84) bytes of data.
64 bytes from 192.169.111.2: icmp_seq=1 ttl=62 time=2.70 ms
64 bytes from 192.169.111.2: icmp_seq=2 ttl=62 time=2.17 ms
64 bytes from 192.169.111.2: icmp_seq=3 ttl=62 time=2.65 ms
64 bytes from 192.169.111.2: icmp_seq=4 ttl=62 time=2.12 ms
64 bytes from 192.169.111.2: icmp_seq=5 ttl=62 time=2.04 ms

--- 192.169.111.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4006ms
rtt min/avg/max/mdev = 2.048/2.340/2.708/0.286 ms
root@VM1:~#</msg>
<msg timestamp="20201009 18:08:49.822" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20201009 18:08:44.990" endtime="20201009 18:08:49.822"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:49.824" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:49.824" endtime="20201009 18:08:49.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:49.825" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:49.825" endtime="20201009 18:08:49.826"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:49.827" endtime="20201009 18:08:49.828"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:49.826" endtime="20201009 18:08:49.828"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:49.823" endtime="20201009 18:08:49.829"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:44.989" endtime="20201009 18:08:49.829"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:44.988" endtime="20201009 18:08:49.829"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:44.988" endtime="20201009 18:08:49.830"></status>
</kw>
<kw name="Ping Test VM2 to VM1(ALL LANS)">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="${vlan} IN RANGE [ 1 | ${VM2['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${vlan} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${vlan}]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:08:49.833" level="INFO">${destip} = 192.169.101.2</msg>
<status status="PASS" starttime="20201009 18:08:49.832" endtime="20201009 18:08:49.834"></status>
</kw>
<kw name="Shell Ping" library="VM1">
<arguments>
<arg>${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:08:54.659" level="INFO">sudo ping 192.169.101.2 -c 5
sudo ping 192.169.101.2 -c 5
PING 192.169.101.2 (192.169.101.2) 56(84) bytes of data.
64 bytes from 192.169.101.2: icmp_seq=1 ttl=64 time=0.091 ms
64 bytes from 192.169.101.2: icmp_seq=2 ttl=64 time=0.080 ms
64 bytes from 192.169.101.2: icmp_seq=3 ttl=64 time=0.064 ms
64 bytes from 192.169.101.2: icmp_seq=4 ttl=64 time=0.055 ms
64 bytes from 192.169.101.2: icmp_seq=5 ttl=64 time=0.077 ms

--- 192.169.101.2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 3996ms
rtt min/avg/max/mdev = 0.055/0.073/0.091/0.014 ms
root@VM1:~#</msg>
<msg timestamp="20201009 18:08:54.659" level="INFO">${result} = True</msg>
<status status="PASS" starttime="20201009 18:08:49.834" endtime="20201009 18:08:54.659"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:08:54.661" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:54.660" endtime="20201009 18:08:54.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:08:54.661" level="INFO">True</msg>
<status status="PASS" starttime="20201009 18:08:54.661" endtime="20201009 18:08:54.661"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:54.662" endtime="20201009 18:08:54.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:54.661" endtime="20201009 18:08:54.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:54.659" endtime="20201009 18:08:54.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:49.832" endtime="20201009 18:08:54.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:49.831" endtime="20201009 18:08:54.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:49.830" endtime="20201009 18:08:54.662"></status>
</kw>
<doc>Ping test CPE1 ALL LAN VM to CPE2 ALL LAN VM</doc>
<tags>
<tag>PING</tag>
</tags>
<status status="PASS" starttime="20201009 18:08:44.986" endtime="20201009 18:08:54.663" critical="yes"></status>
</test>
<test id="s1-t4" name="NV_SINGLE_CPE_HYBRID_SANITY_04">
<kw name="Iperf3 test VM1 to VM2">
<tags>
<tag>HYBRID</tag>
</tags>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:08:54.665" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" starttime="20201009 18:08:54.665" endtime="20201009 18:08:54.665"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>pkill iperf3 &amp;</arg>
</arguments>
<status status="PASS" starttime="20201009 18:08:54.666" endtime="20201009 18:08:54.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:09:04.980" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:08:54.979" endtime="20201009 18:09:04.980"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>iperf3 -s &amp;</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:04.980" endtime="20201009 18:09:05.294"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>iperf3 -c ${destip}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:09:15.946" level="INFO">${result} = iperf3 -c 192.169.111.2
Connecting to host 192.169.111.2, port 5201
[  4] local 192.169.101.2 port 60464 connected to 192.169.111.2 port 5201
[ ID] Interval           Transfer     Bandwidth       Retr...</msg>
<status status="PASS" starttime="20201009 18:09:05.294" endtime="20201009 18:09:15.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>iperf Done.</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:15.946" endtime="20201009 18:09:15.947"></status>
</kw>
<status status="PASS" starttime="20201009 18:08:54.664" endtime="20201009 18:09:15.947"></status>
</kw>
<doc>Iperf test VM1 to VM2</doc>
<tags>
<tag>IPERF</tag>
</tags>
<status status="PASS" starttime="20201009 18:08:54.664" endtime="20201009 18:09:15.947" critical="yes"></status>
</test>
<test id="s1-t5" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_01">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>dest_address_obj=${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:09:15.950" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20201009 18:09:19.068" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:09:19.068" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:09:19.068" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				"address-list": ["dst_ip_add_obj11"]
				
				}
			},
			"application": {
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" starttime="20201009 18:09:15.950" endtime="20201009 18:09:19.068"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:09:34.848" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:43:47]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-10-09 12:43:51]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-10-09 12:43:51]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:43:56]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:09:19.069" endtime="20201009 18:09:34.848"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:09:35.751" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:32:01]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:09:34.849" endtime="20201009 18:09:35.751"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:35.751" endtime="20201009 18:09:35.758"></status>
</kw>
<status status="PASS" starttime="20201009 18:09:34.849" endtime="20201009 18:09:35.758"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:09:37.064" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:09:37.064" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:32:02]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:09:35.760" endtime="20201009 18:09:37.065"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:37.065" endtime="20201009 18:09:37.067"></status>
</kw>
<status status="PASS" starttime="20201009 18:09:35.759" endtime="20201009 18:09:37.068"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:09:38.174" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:09:38.174" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                     
                     O...</msg>
<status status="PASS" starttime="20201009 18:09:37.070" endtime="20201009 18:09:38.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:38.174" endtime="20201009 18:09:38.175"></status>
</kw>
<status status="PASS" starttime="20201009 18:09:37.069" endtime="20201009 18:09:38.175"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<msg timestamp="20201009 18:09:39.882" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<status status="PASS" starttime="20201009 18:09:38.175" endtime="20201009 18:09:39.882"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:09:48.207" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:09:48.207" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:31:51
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" starttime="20201009 18:09:39.883" endtime="20201009 18:09:48.207"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:09:48.207" endtime="20201009 18:09:48.209"></status>
</kw>
<status status="PASS" starttime="20201009 18:09:39.882" endtime="20201009 18:09:48.209"></status>
</kw>
<kw name="Show Config Object Addresses" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:09:49.920" level="INFO">show configuration orgs org-services IPC00190 objects addresses dst_ip_add_obj11 | display set | nomore
set orgs org-services IPC00190 objects addresses dst_ip_add_obj11 ipv4-prefix 192.169.111.3/32
[ok][2020-10-09 12:32:15]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:09:48.210" endtime="20201009 18:09:49.920"></status>
</kw>
<kw name="Show Config Sdwan Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20201009 18:09:51.626" level="INFO">show configuration orgs org-services IPC00190 sd-wan sla-profiles SLA112 | display set | nomore
set orgs org-services IPC00190 sd-wan sla-profiles SLA112 circuit-transmit-utilization 5
[ok][2020-10-09 12:32:17]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:09:49.920" endtime="20201009 18:09:51.626"></status>
</kw>
<kw name="Show Config Sdwan Fwd Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20201009 18:09:53.333" level="INFO">show configuration orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 | display set | nomore
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-profile SLA112
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 1 circuit-names local [ MPLS-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 2 circuit-names local [ INT-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 connection-selection-method weighted-round-robin
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-violation-action forward
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 evaluate-continuously disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 recompute-timer 40
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 encryption optional
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 symmetric-forwarding enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 turn-redirect disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 replication mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec sender mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver recovery enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver preserve-order enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-smoothing enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-dampening enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 load-balance per-flow
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 gradual-migration disable
[ok][2020-10-09 12:32:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:09:51.628" endtime="20201009 18:09:53.333"></status>
</kw>
<kw name="Show Config Sdwan Policy Rules" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:09:55.238" level="INFO">show configuration orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 | display set | nomore
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match source user user-type any
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match destination address address-list [ dst_ip_add_obj11 ]
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set action allow
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set forwarding-profile FWP112
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef event never
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef rate-limit 10
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor interval 3
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor threshold 5
[ok][2020-10-09 12:32:20]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:09:53.334" endtime="20201009 18:09:55.238"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:10:05.240" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:09:55.239" endtime="20201009 18:10:05.240"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:10:07.802" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:10:05.242" endtime="20201009 18:10:07.802"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:10:47.804" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:10:07.803" endtime="20201009 18:10:47.804"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:10:49.111" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:10:49.112" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                           
                ...</msg>
<status status="PASS" starttime="20201009 18:10:47.806" endtime="20201009 18:10:49.112"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:10:49.112" endtime="20201009 18:10:49.113"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:47.805" endtime="20201009 18:10:49.114"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:10:51.022" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:10:51.023" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:10:49.115" endtime="20201009 18:10:51.023"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:10:51.026" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      0      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             1      0      2      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  0      0      1      0.00        0.00        0.00        -            9            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  0      0      1      0.00        0.00        0.00        -            9            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  0      0      1      0.00        0.00        0.00        -            9            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  0      0      1      0.00        0.00        0.00        -            9            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  1      0      0      0.00        0.00        0.00        -            9            

[ok][2020-10-09 12:33:16]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:10:51.025" endtime="20201009 18:10:51.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:10:51.027" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:10:51.027" endtime="20201009 18:10:51.027"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:10:51.028" endtime="20201009 18:10:51.029"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:51.028" endtime="20201009 18:10:51.029"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:51.024" endtime="20201009 18:10:51.030"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:10:52.735" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20201009 18:10:52.736" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 135
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:10:51.031" endtime="20201009 18:10:52.736"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:10:52.741" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 135
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62210
 forward-byte-count         8584980
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:33:18]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:10:52.740" endtime="20201009 18:10:52.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:10:52.742" level="INFO">tx-wan-ckt\s+MPLS-WAN</msg>
<status status="PASS" starttime="20201009 18:10:52.741" endtime="20201009 18:10:52.742"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:10:52.743" endtime="20201009 18:10:52.744"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:52.742" endtime="20201009 18:10:52.744"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:52.737" endtime="20201009 18:10:52.744"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:10:52.748" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 135
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62210
 forward-byte-count         8584980
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:33:18]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:10:52.747" endtime="20201009 18:10:52.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:10:52.749" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:10:52.748" endtime="20201009 18:10:52.749"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:10:52.750" endtime="20201009 18:10:52.751"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:52.749" endtime="20201009 18:10:52.751"></status>
</kw>
<status status="PASS" starttime="20201009 18:10:52.745" endtime="20201009 18:10:52.752"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:10:53.452" level="INFO">streamblock2
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:10:52.753" endtime="20201009 18:10:53.452"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:11:33.453" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:10:53.453" endtime="20201009 18:11:33.453"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:11:34.762" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:11:34.762" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                           
                ...</msg>
<status status="PASS" starttime="20201009 18:11:33.454" endtime="20201009 18:11:34.762"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:11:34.763" endtime="20201009 18:11:34.765"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:33.454" endtime="20201009 18:11:34.765"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:11:36.676" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:11:36.676" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:11:34.767" endtime="20201009 18:11:36.677"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:11:36.680" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      1      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             0      0      0      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  1      0      1      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  1      0      1      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            

[ok][2020-10-09 12:34:02]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:11:36.679" endtime="20201009 18:11:36.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:11:36.681" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:11:36.680" endtime="20201009 18:11:36.681"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:11:36.682" endtime="20201009 18:11:36.683"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:36.681" endtime="20201009 18:11:36.683"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:36.677" endtime="20201009 18:11:36.683"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2001</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:11:38.390" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2001</msg>
<msg timestamp="20201009 18:11:38.390" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 137
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:11:36.684" endtime="20201009 18:11:38.390"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:11:38.393" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 137
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62207
 forward-byte-count         8584566
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:34:04]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:11:38.393" endtime="20201009 18:11:38.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:11:38.394" level="INFO">tx-wan-ckt\s+INT-WAN</msg>
<status status="PASS" starttime="20201009 18:11:38.393" endtime="20201009 18:11:38.394"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:11:38.395" endtime="20201009 18:11:38.395"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:38.394" endtime="20201009 18:11:38.395"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:38.391" endtime="20201009 18:11:38.396"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:11:38.407" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 137
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62207
 forward-byte-count         8584566
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:34:04]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:11:38.407" endtime="20201009 18:11:38.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:11:38.408" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:11:38.407" endtime="20201009 18:11:38.408"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:11:38.408" endtime="20201009 18:11:38.408"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:38.408" endtime="20201009 18:11:38.408"></status>
</kw>
<status status="PASS" starttime="20201009 18:11:38.405" endtime="20201009 18:11:38.409"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:11:39.076" level="INFO">streamblock3
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:11:38.409" endtime="20201009 18:11:39.076"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:12:19.078" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:11:39.076" endtime="20201009 18:12:19.078"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:12:20.383" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:12:20.383" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                           
                ...</msg>
<status status="PASS" starttime="20201009 18:12:19.079" endtime="20201009 18:12:20.383"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:12:20.383" endtime="20201009 18:12:20.384"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:19.078" endtime="20201009 18:12:20.384"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:12:22.490" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:12:22.491" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:12:20.384" endtime="20201009 18:12:22.491"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:12:22.496" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      1      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             1      0      0      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  1      0      1      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  1      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            

[ok][2020-10-09 12:34:48]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:12:22.495" endtime="20201009 18:12:22.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:12:22.500" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:12:22.497" endtime="20201009 18:12:22.500"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:12:22.501" endtime="20201009 18:12:22.502"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:22.501" endtime="20201009 18:12:22.502"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:22.493" endtime="20201009 18:12:22.503"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2002</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:12:24.212" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2002</msg>
<msg timestamp="20201009 18:12:24.212" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 138
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:12:22.504" endtime="20201009 18:12:24.212"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:12:24.214" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 138
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          62536
 forward-byte-count         8629968
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:45
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:34:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:12:24.213" endtime="20201009 18:12:24.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:12:24.214" level="INFO">tx-wan-ckt\s+INT-WAN</msg>
<status status="PASS" starttime="20201009 18:12:24.214" endtime="20201009 18:12:24.214"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:12:24.215" endtime="20201009 18:12:24.215"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:24.215" endtime="20201009 18:12:24.215"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:24.212" endtime="20201009 18:12:24.215"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:12:24.217" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 138
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          62536
 forward-byte-count         8629968
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:45
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:34:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:12:24.217" endtime="20201009 18:12:24.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:12:24.217" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:12:24.217" endtime="20201009 18:12:24.218"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:12:24.218" endtime="20201009 18:12:24.218"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:24.218" endtime="20201009 18:12:24.218"></status>
</kw>
<status status="PASS" starttime="20201009 18:12:24.216" endtime="20201009 18:12:24.219"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:12:38.087" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:12:24.219" endtime="20201009 18:12:38.087"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:12:48.259" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:12:38.087" endtime="20201009 18:12:48.259"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:12:58.275" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:12:48.259" endtime="20201009 18:12:58.275"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:12:58.276" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:13:01.508" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:13:01.509" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:13:01.509" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:12:58.275" endtime="20201009 18:13:01.509"></status>
</kw>
<doc>Traffic steering based on Destination IP</doc>
<tags>
<tag>P1</tag>
<tag>TS1</tag>
</tags>
<status status="PASS" starttime="20201009 18:09:15.949" endtime="20201009 18:13:01.509" critical="yes"></status>
</test>
<test id="s1-t6" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_02">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>src_address_obj=${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:13:01.512" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20201009 18:13:03.448" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:13:03.449" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:13:03.449" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				"address-list": ["src_ip_add_obj11"]
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" starttime="20201009 18:13:01.511" endtime="20201009 18:13:03.449"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:13:19.930" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:47:31]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-10-09 12:47:34]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-10-09 12:47:35]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:47:41]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:13:03.449" endtime="20201009 18:13:19.930"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:13:20.834" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:35:46]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:13:19.931" endtime="20201009 18:13:20.834"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:13:20.834" endtime="20201009 18:13:20.835"></status>
</kw>
<status status="PASS" starttime="20201009 18:13:19.931" endtime="20201009 18:13:20.835"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:13:22.139" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:13:22.139" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:35:47]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:13:20.836" endtime="20201009 18:13:22.139"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:13:22.139" endtime="20201009 18:13:22.140"></status>
</kw>
<status status="PASS" starttime="20201009 18:13:20.835" endtime="20201009 18:13:22.140"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:13:23.245" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:13:23.245" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:13:22.141" endtime="20201009 18:13:23.245"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:13:23.245" endtime="20201009 18:13:23.246"></status>
</kw>
<status status="PASS" starttime="20201009 18:13:22.140" endtime="20201009 18:13:23.246"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:13:31.566" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:13:31.566" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:35:35
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" starttime="20201009 18:13:23.247" endtime="20201009 18:13:31.566"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:13:31.567" endtime="20201009 18:13:31.568"></status>
</kw>
<status status="PASS" starttime="20201009 18:13:23.247" endtime="20201009 18:13:31.568"></status>
</kw>
<kw name="Show Config Object Addresses" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:13:33.274" level="INFO">show configuration orgs org-services IPC00190 objects addresses src_ip_add_obj11 | display set | nomore
set orgs org-services IPC00190 objects addresses src_ip_add_obj11 ipv4-prefix 192.169.101.3/32
[ok][2020-10-09 12:35:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:13:31.569" endtime="20201009 18:13:33.274"></status>
</kw>
<kw name="Show Config Sdwan Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20201009 18:13:34.981" level="INFO">show configuration orgs org-services IPC00190 sd-wan sla-profiles SLA112 | display set | nomore
set orgs org-services IPC00190 sd-wan sla-profiles SLA112 circuit-transmit-utilization 5
[ok][2020-10-09 12:36:00]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:13:33.275" endtime="20201009 18:13:34.981"></status>
</kw>
<kw name="Show Config Sdwan Fwd Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20201009 18:13:36.688" level="INFO">show configuration orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 | display set | nomore
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-profile SLA112
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 1 circuit-names local [ MPLS-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 2 circuit-names local [ INT-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 connection-selection-method weighted-round-robin
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-violation-action forward
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 evaluate-continuously disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 recompute-timer 40
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 encryption optional
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 symmetric-forwarding enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 turn-redirect disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 replication mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec sender mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver recovery enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver preserve-order enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-smoothing enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-dampening enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 load-balance per-flow
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 gradual-migration disable
[ok][2020-10-09 12:36:02]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:13:34.982" endtime="20201009 18:13:36.688"></status>
</kw>
<kw name="Show Config Sdwan Policy Rules" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:13:38.594" level="INFO">show configuration orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 | display set | nomore
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match source address address-list [ src_ip_add_obj11 ]
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match source user user-type any
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set action allow
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set forwarding-profile FWP112
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef event never
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef rate-limit 10
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor interval 3
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor threshold 5
[ok][2020-10-09 12:36:04]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:13:36.689" endtime="20201009 18:13:38.594"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:13:48.597" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:13:38.595" endtime="20201009 18:13:48.597"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:13:49.978" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:13:48.597" endtime="20201009 18:13:49.978"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:14:29.979" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:13:49.978" endtime="20201009 18:14:29.979"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:14:31.083" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:14:31.083" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:14:29.980" endtime="20201009 18:14:31.083"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:14:31.083" endtime="20201009 18:14:31.084"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:29.979" endtime="20201009 18:14:31.084"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:14:32.990" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:14:32.991" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:14:31.084" endtime="20201009 18:14:32.991"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:14:32.996" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      0      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             0      0      0      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            

[ok][2020-10-09 12:36:58]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:14:32.995" endtime="20201009 18:14:32.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:14:32.997" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:14:32.996" endtime="20201009 18:14:32.998"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:14:33.000" endtime="20201009 18:14:33.001"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:32.998" endtime="20201009 18:14:33.002"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:32.992" endtime="20201009 18:14:33.002"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:14:34.719" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20201009 18:14:34.719" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 139
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:14:33.011" endtime="20201009 18:14:34.719"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:14:34.722" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 139
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          61944
 forward-byte-count         8548272
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:37:00]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:14:34.721" endtime="20201009 18:14:34.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:14:34.723" level="INFO">tx-wan-ckt\s+MPLS-WAN</msg>
<status status="PASS" starttime="20201009 18:14:34.722" endtime="20201009 18:14:34.723"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:14:34.725" endtime="20201009 18:14:34.726"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:34.723" endtime="20201009 18:14:34.726"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:34.720" endtime="20201009 18:14:34.727"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:14:34.729" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 139
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          61944
 forward-byte-count         8548272
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:37:00]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:14:34.729" endtime="20201009 18:14:34.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:14:34.730" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:14:34.730" endtime="20201009 18:14:34.730"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:14:34.731" endtime="20201009 18:14:34.731"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:34.730" endtime="20201009 18:14:34.731"></status>
</kw>
<status status="PASS" starttime="20201009 18:14:34.728" endtime="20201009 18:14:34.732"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:14:35.436" level="INFO">streamblock2
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:14:34.732" endtime="20201009 18:14:35.436"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:15:15.439" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:14:35.436" endtime="20201009 18:15:15.439"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:15:16.744" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:15:16.745" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:15:15.440" endtime="20201009 18:15:16.745"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:15:16.745" endtime="20201009 18:15:16.747"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:15.439" endtime="20201009 18:15:16.748"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:15:18.856" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:15:18.856" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:15:16.749" endtime="20201009 18:15:18.856"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:15:18.857" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      1      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             0      0      0      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  2      0      2      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  0      1      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  0      0      1      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  0      1      1      0.00        0.00        0.00        -            8            

[ok][2020-10-09 12:37:44]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:15:18.856" endtime="20201009 18:15:18.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:15:18.858" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:15:18.857" endtime="20201009 18:15:18.858"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:15:18.858" endtime="20201009 18:15:18.858"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:18.858" endtime="20201009 18:15:18.859"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:18.856" endtime="20201009 18:15:18.859"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2001</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:15:20.565" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2001</msg>
<msg timestamp="20201009 18:15:20.565" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 140
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:15:18.859" endtime="20201009 18:15:20.565"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:15:20.567" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 140
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62492
 forward-byte-count         8623896
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:37:46]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:15:20.566" endtime="20201009 18:15:20.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:15:20.568" level="INFO">tx-wan-ckt\s+INT-WAN</msg>
<status status="PASS" starttime="20201009 18:15:20.567" endtime="20201009 18:15:20.568"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:15:20.569" endtime="20201009 18:15:20.569"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:20.568" endtime="20201009 18:15:20.569"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:20.565" endtime="20201009 18:15:20.569"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:15:20.571" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2001
sessions sdwan detail 0 2 140
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2001
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          62492
 forward-byte-count         8623896
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:37:46]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:15:20.570" endtime="20201009 18:15:20.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:15:20.571" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:15:20.571" endtime="20201009 18:15:20.571"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:15:20.572" endtime="20201009 18:15:20.572"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:20.571" endtime="20201009 18:15:20.572"></status>
</kw>
<status status="PASS" starttime="20201009 18:15:20.570" endtime="20201009 18:15:20.572"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:15:21.243" level="INFO">streamblock3
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:15:20.573" endtime="20201009 18:15:21.243"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:16:01.245" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:15:21.243" endtime="20201009 18:16:01.245"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:16:02.549" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:16:02.549" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:16:01.246" endtime="20201009 18:16:02.549"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:02.549" endtime="20201009 18:16:02.550"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:01.245" endtime="20201009 18:16:02.550"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<assign>
<var>${result1}</var>
</assign>
<msg timestamp="20201009 18:16:04.656" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<msg timestamp="20201009 18:16:04.656" level="INFO">${result1} = show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                   ...</msg>
<status status="PASS" starttime="20201009 18:16:02.550" endtime="20201009 18:16:04.656"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result1}</arg>
<arg>expected=SLA Violated</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:16:04.659" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab
                                                                                             TWO    FWD    REV                                                                  
                          FORWARDING  SLA      LOCAL     REMOTE    FORWARDING                WAY    DELAY  DELAY  FWD LOSS    REV LOSS    PDU LOSS    CIRCUIT RX   CIRCUIT TX   
REMOTE BRANCH             PROFILE     PROFILE  CIRCUIT   CIRCUIT   CLASS       PRIORITY      DELAY  VAR    VAR    PERCENTAGE  PERCENTAGE  PERCENTAGE  UTILIZATION  UTILIZATION  
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CPE12-HKG-HYBRD-IPC00190  FWP112      SLA112   INT-WAN   INT-WAN   fc_ef       2             0      0      0      0.00        0.00        0.00        -            0            
                                               INT-WAN   INT-WAN   fc_be       2             1      0      1      0.00        0.00        0.00        -            0            
                                               MPLS-WAN  MPLS-WAN  fc_ef       SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc_be       SLA Violated  1      0      2      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc13        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc14        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            
                                               MPLS-WAN  MPLS-WAN  fc15        SLA Violated  0      0      0      0.00        0.00        0.00        -            8            

[ok][2020-10-09 12:38:30]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:16:04.658" endtime="20201009 18:16:04.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:16:04.660" level="INFO">SLA Violated</msg>
<status status="PASS" starttime="20201009 18:16:04.660" endtime="20201009 18:16:04.660"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:04.661" endtime="20201009 18:16:04.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:04.661" endtime="20201009 18:16:04.662"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:04.657" endtime="20201009 18:16:04.663"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2002</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:16:06.369" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2002</msg>
<msg timestamp="20201009 18:16:06.370" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 141
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:16:04.663" endtime="20201009 18:16:06.370"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN2_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:16:06.375" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 141
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          62628
 forward-byte-count         8642664
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:45
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:38:32]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:16:06.373" endtime="20201009 18:16:06.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:16:06.377" level="INFO">tx-wan-ckt\s+INT-WAN</msg>
<status status="PASS" starttime="20201009 18:16:06.376" endtime="20201009 18:16:06.377"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:06.379" endtime="20201009 18:16:06.380"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:06.378" endtime="20201009 18:16:06.380"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:06.371" endtime="20201009 18:16:06.380"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:16:06.391" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2002
sessions sdwan detail 0 2 141
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2002
 destination-port           1025
 protocol                   17
 natted                     No
 sdwan                      Yes
 application                unknown_udp
 forward-pkt-count          62628
 forward-byte-count         8642664
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:45
 idle-for                   00:00:00
 idle-timeout               30
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 INT-WAN:INT-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         INT-WAN:INT-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:38:32]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:16:06.389" endtime="20201009 18:16:06.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:16:06.394" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:16:06.393" endtime="20201009 18:16:06.394"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:06.395" endtime="20201009 18:16:06.396"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:06.395" endtime="20201009 18:16:06.396"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:06.382" endtime="20201009 18:16:06.397"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream3['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:16:15.902" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:16:06.398" endtime="20201009 18:16:15.902"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream2['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:16:25.283" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:16:15.902" endtime="20201009 18:16:25.283"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:16:35.486" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:16:25.283" endtime="20201009 18:16:35.486"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:16:35.487" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:16:38.383" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:16:38.383" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:16:38.384" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:16:35.486" endtime="20201009 18:16:38.384"></status>
</kw>
<doc>Traffic steering based on Source IP</doc>
<tags>
<tag>P1</tag>
<tag>TS2</tag>
</tags>
<status status="PASS" starttime="20201009 18:13:01.510" endtime="20201009 18:16:38.384" critical="yes"></status>
</test>
<test id="s1-t7" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_03">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>port_address_obj=${serviceobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:16:38.390" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20201009 18:16:40.215" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:16:40.216" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:16:40.216" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				
			},
			"services": {
				"services-list": ["src_port_2000"]
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" starttime="20201009 18:16:38.389" endtime="20201009 18:16:40.216"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:16:55.992" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:51:08]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-10-09 12:51:11]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-10-09 12:51:12]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:51:17]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:16:40.216" endtime="20201009 18:16:55.992"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:16:57.099" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:39:22]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:16:55.995" endtime="20201009 18:16:57.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:57.099" endtime="20201009 18:16:57.099"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:55.993" endtime="20201009 18:16:57.100"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:16:58.405" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:16:58.405" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:39:24]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:16:57.100" endtime="20201009 18:16:58.405"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:58.405" endtime="20201009 18:16:58.406"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:57.100" endtime="20201009 18:16:58.406"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:16:59.510" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:16:59.510" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:16:58.407" endtime="20201009 18:16:59.510"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:16:59.511" endtime="20201009 18:16:59.512"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:58.406" endtime="20201009 18:16:59.513"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:17:07.841" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:17:07.841" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:39:12
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" starttime="20201009 18:16:59.516" endtime="20201009 18:17:07.841"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:17:07.841" endtime="20201009 18:17:07.842"></status>
</kw>
<status status="PASS" starttime="20201009 18:16:59.514" endtime="20201009 18:17:07.843"></status>
</kw>
<kw name="Show Config Object Services" library="CPE1">
<arguments>
<arg>${serviceobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:17:09.547" level="INFO">show configuration orgs org-services IPC00190 objects services src_port_2000 | display set | nomore
set orgs org-services IPC00190 objects services src_port_2000 protocol TCP
set orgs org-services IPC00190 objects services src_port_2000 source-port 2000
[ok][2020-10-09 12:39:35]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:17:07.843" endtime="20201009 18:17:09.547"></status>
</kw>
<kw name="Show Config Sdwan Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20201009 18:17:11.253" level="INFO">show configuration orgs org-services IPC00190 sd-wan sla-profiles SLA112 | display set | nomore
set orgs org-services IPC00190 sd-wan sla-profiles SLA112 circuit-transmit-utilization 5
[ok][2020-10-09 12:39:37]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:17:09.548" endtime="20201009 18:17:11.253"></status>
</kw>
<kw name="Show Config Sdwan Fwd Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20201009 18:17:12.961" level="INFO">show configuration orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 | display set | nomore
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-profile SLA112
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 1 circuit-names local [ MPLS-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 2 circuit-names local [ INT-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 connection-selection-method weighted-round-robin
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-violation-action forward
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 evaluate-continuously disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 recompute-timer 40
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 encryption optional
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 symmetric-forwarding enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 turn-redirect disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 replication mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec sender mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver recovery enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver preserve-order enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-smoothing enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-dampening enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 load-balance per-flow
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 gradual-migration disable
[ok][2020-10-09 12:39:38]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:17:11.254" endtime="20201009 18:17:12.961"></status>
</kw>
<kw name="Show Config Sdwan Policy Rules" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:17:14.872" level="INFO">show configuration orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 | display set | nomore
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match source user user-type any
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match services services-list [ src_port_2000 ]
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set action allow
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set forwarding-profile FWP112
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef event never
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef rate-limit 10
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor interval 3
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor threshold 5
[ok][2020-10-09 12:39:40]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:17:12.965" endtime="20201009 18:17:14.872"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:17:24.873" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:17:14.873" endtime="20201009 18:17:24.873"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:17:26.323" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:17:24.876" endtime="20201009 18:17:26.323"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>40s</arg>
</arguments>
<msg timestamp="20201009 18:18:06.325" level="INFO">Slept 40 seconds</msg>
<status status="PASS" starttime="20201009 18:17:26.323" endtime="20201009 18:18:06.325"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:07.429" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:18:07.429" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:18:06.326" endtime="20201009 18:18:07.429"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:07.429" endtime="20201009 18:18:07.429"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:06.325" endtime="20201009 18:18:07.429"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<msg timestamp="20201009 18:18:09.334" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<status status="PASS" starttime="20201009 18:18:07.430" endtime="20201009 18:18:09.334"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>source_port=2000</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:11.040" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select source-port 2000</msg>
<msg timestamp="20201009 18:18:11.040" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 142
 source-ip                  192.169.101.3
 destination-ip             192....</msg>
<status status="PASS" starttime="20201009 18:18:09.334" endtime="20201009 18:18:11.040"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:18:11.042" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 142
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          61857
 forward-byte-count         8536266
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:40:36]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:18:11.042" endtime="20201009 18:18:11.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:18:11.042" level="INFO">tx-wan-ckt\s+MPLS-WAN</msg>
<status status="PASS" starttime="20201009 18:18:11.042" endtime="20201009 18:18:11.042"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:11.043" endtime="20201009 18:18:11.043"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:11.043" endtime="20201009 18:18:11.043"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:11.041" endtime="20201009 18:18:11.044"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:18:11.046" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select source-port 2000
sessions sdwan detail 0 2 142
 source-ip                  192.169.101.3
 destination-ip             192.169.111.3
 source-port                2000
 destination-port           1024
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                -
 forward-pkt-count          61857
 forward-byte-count         8536266
 reverse-pkt-count          0
 reverse-byte-count         0
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:44
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  n/a
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 -
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-ckt        -
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:40:36]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:18:11.045" endtime="20201009 18:18:11.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:18:11.047" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:18:11.046" endtime="20201009 18:18:11.047"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:11.048" endtime="20201009 18:18:11.048"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:11.047" endtime="20201009 18:18:11.048"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:11.044" endtime="20201009 18:18:11.048"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:18:21.086" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:18:11.049" endtime="20201009 18:18:21.086"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:18:21.088" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:18:23.942" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:18:23.943" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:18:23.943" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:18:21.087" endtime="20201009 18:18:23.943"></status>
</kw>
<doc>Traffic steering based on Source PORT</doc>
<tags>
<tag>P1</tag>
<tag>TS3</tag>
</tags>
<status status="PASS" starttime="20201009 18:16:38.387" endtime="20201009 18:18:23.944" critical="yes"></status>
</test>
<test id="s1-t8" name="NV_SINGLE_CPE_HYBRID_TRAFFIC_STEERING_04">
<kw name="Create Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${fwp_1}</arg>
<arg>application=IPERF</arg>
</arguments>
<msg timestamp="20201009 18:18:23.949" level="INFO">
CREATE Policy rule
</msg>
<msg timestamp="20201009 18:18:25.695" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:18:25.695" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; CREATE POLICY RULE PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:18:25.696" level="INFO">{
	"rule": {
		"name": "policy_rule_11",
		"tag": [],
		"match": {
			"source": {
				"zone": {},
				"address": {
				
				},
				"user": {
					"user-type": "any",
					"local-database": {
						"status": "disabled"
					},
					"external-database": {
						"status": "disabled"
					}
				}
			},
			"destination": {
				"zone": {},
				"address": {
				
				}
			},
			"application": {
				"predefined-application-list": ["IPERF"]
				
			},
			
			"ttl": {}
		},
		"set": {
			"lef": {
				"event": "never",
				"rate-limit": 10
			},
			"action": "allow",
			"forwarding-profile": "FWP112"
		},
		"monitor": {
			"interval": "3",
			"threshold": "5"
		}
	}
}</msg>
<status status="PASS" starttime="20201009 18:18:23.948" endtime="20201009 18:18:25.696"></status>
</kw>
<kw name="Move Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>${plcyrule_1}</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:18:42.078" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:52:53]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 first
[ok][2020-10-09 12:52:57]

[edit]
Automated@VDir-BLR-NEW-01% commit
Commit complete.
[ok][2020-10-09 12:52:57]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:53:03]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:18:25.697" endtime="20201009 18:18:42.078"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:43.180" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:41:08]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:18:42.079" endtime="20201009 18:18:43.180"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:43.180" endtime="20201009 18:18:43.181"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:42.078" endtime="20201009 18:18:43.181"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:44.486" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:18:44.486" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:41:10]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:18:43.182" endtime="20201009 18:18:44.486"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:44.486" endtime="20201009 18:18:44.488"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:43.181" endtime="20201009 18:18:44.488"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:45.592" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:18:45.592" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:18:44.489" endtime="20201009 18:18:45.592"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:45.592" endtime="20201009 18:18:45.593"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:44.489" endtime="20201009 18:18:45.593"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<msg timestamp="20201009 18:18:47.298" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<status status="PASS" starttime="20201009 18:18:45.594" endtime="20201009 18:18:47.298"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:18:55.625" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:18:55.626" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:40:57
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" starttime="20201009 18:18:47.299" endtime="20201009 18:18:55.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:18:55.626" endtime="20201009 18:18:55.630"></status>
</kw>
<status status="PASS" starttime="20201009 18:18:47.298" endtime="20201009 18:18:55.631"></status>
</kw>
<kw name="Show Config Sdwan Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20201009 18:18:57.140" level="INFO">show configuration orgs org-services IPC00190 sd-wan sla-profiles SLA112 | display set | nomore
set orgs org-services IPC00190 sd-wan sla-profiles SLA112 circuit-transmit-utilization 5
[ok][2020-10-09 12:41:23]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:18:55.633" endtime="20201009 18:18:57.140"></status>
</kw>
<kw name="Show Config Sdwan Fwd Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20201009 18:18:58.848" level="INFO">show configuration orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 | display set | nomore
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-profile SLA112
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 1 circuit-names local [ MPLS-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 circuit-priorities priority 2 circuit-names local [ INT-WAN ]
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 connection-selection-method weighted-round-robin
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-violation-action forward
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 evaluate-continuously disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 recompute-timer 40
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 encryption optional
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 symmetric-forwarding enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 turn-redirect disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 replication mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec sender mode disable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver recovery enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 fec receiver preserve-order enable
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-smoothing enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 sla-dampening enable false
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 load-balance per-flow
set orgs org-services IPC00190 sd-wan forwarding-profiles FWP112 gradual-migration disable
[ok][2020-10-09 12:41:24]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:18:57.144" endtime="20201009 18:18:58.848"></status>
</kw>
<kw name="Show Config Sdwan Policy Rules" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:19:00.755" level="INFO">show configuration orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 | display set | nomore
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match source user user-type any
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 match application predefined-application-list [ IPERF ]
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set action allow
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set forwarding-profile FWP112
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef event never
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 set lef rate-limit 10
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor interval 3
set orgs org-services IPC00190 sd-wan policies Default-Policy rules policy_rule_11 monitor threshold 5
[ok][2020-10-09 12:41:26]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:18:58.849" endtime="20201009 18:19:00.755"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:19:10.758" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:19:00.756" endtime="20201009 18:19:10.758"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][1]['second_host']}</arg>
</arguments>
<assign>
<var>${destip}</var>
</assign>
<msg timestamp="20201009 18:19:10.760" level="INFO">${destip} = 192.169.111.2</msg>
<status status="PASS" starttime="20201009 18:19:10.759" endtime="20201009 18:19:10.760"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>pkill iperf3 &amp;</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:10.761" endtime="20201009 18:19:11.276"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:19:21.278" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:19:11.276" endtime="20201009 18:19:21.278"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>iperf3 -s &amp;</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:21.279" endtime="20201009 18:19:21.792"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20201009 18:19:26.794" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20201009 18:19:21.792" endtime="20201009 18:19:26.794"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>iperf3 -c ${destip} &amp;</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:27.206" level="INFO">${result} = iperf3 -c 192.169.111.2 &amp;
[1] 20179
root@VM1:~# Connecting to host 192.169.111.2, port 5201
[  4] local 192.169.101.2 port 60472 connected to 192.169.111.2 port 5201
</msg>
<status status="PASS" starttime="20201009 18:19:26.794" endtime="20201009 18:19:27.206"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20201009 18:19:32.210" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20201009 18:19:27.207" endtime="20201009 18:19:32.210"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:33.516" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:19:33.516" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                                   
        ...</msg>
<status status="PASS" starttime="20201009 18:19:32.211" endtime="20201009 18:19:33.516"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:33.516" endtime="20201009 18:19:33.524"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:32.210" endtime="20201009 18:19:33.525"></status>
</kw>
<kw name="Show Defpolicy Path State" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
<arg>${CPE2['Device_name']}</arg>
</arguments>
<msg timestamp="20201009 18:19:35.432" level="INFO">show orgs org-services IPC00190 sd-wan policies Default-Policy rules path-state detail policy_rule_11 CPE12-HKG-HYBRD-IPC00190 | tab</msg>
<status status="PASS" starttime="20201009 18:19:33.526" endtime="20201009 18:19:35.432"></status>
</kw>
<kw name="Show Session Sdwan Detail" library="CPE1">
<arguments>
<arg>application=iperf</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:37.138" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select application iperf</msg>
<msg timestamp="20201009 18:19:37.138" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore| select | select application iperf
sessions sdwan detail 0 2 144
 source-ip                  192.169.101.2
 destination-ip             192...</msg>
<status status="PASS" starttime="20201009 18:19:35.432" endtime="20201009 18:19:37.138"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=tx-wan-ckt\\s+${CPE1['WAN1_NAME']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:19:37.140" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select application iperf
sessions sdwan detail 0 2 144
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                60472
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          244001
 forward-byte-count         325949269
 reverse-pkt-count          36576
 reverse-byte-count         1934052
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:09
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  ptvi-0/53
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
sessions sdwan detail 0 2 143
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                60470
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          8
 forward-byte-count         522
 reverse-pkt-count          7
 reverse-byte-count         376
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:09
 idle-for                   00:00:09
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  ptvi-0/53
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:42:02]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:19:37.139" endtime="20201009 18:19:37.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:19:37.140" level="INFO">tx-wan-ckt\s+MPLS-WAN</msg>
<status status="PASS" starttime="20201009 18:19:37.140" endtime="20201009 18:19:37.141"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:37.141" endtime="20201009 18:19:37.142"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:37.141" endtime="20201009 18:19:37.142"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:37.139" endtime="20201009 18:19:37.142"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=sdwan-rule-name\\s+${plcyrule_1}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:19:37.144" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore| select | select application iperf
sessions sdwan detail 0 2 144
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                60472
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          244001
 forward-byte-count         325949269
 reverse-pkt-count          36576
 reverse-byte-count         1934052
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:09
 idle-for                   00:00:00
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  ptvi-0/53
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
sessions sdwan detail 0 2 143
 source-ip                  192.169.101.2
 destination-ip             192.169.111.2
 source-port                60470
 destination-port           5201
 protocol                   6
 natted                     No
 sdwan                      Yes
 application                iperf
 forward-pkt-count          8
 forward-byte-count         522
 reverse-pkt-count          7
 reverse-byte-count         376
 dropped-forward-pkt-count  0
 dropped-forward-byte-count 0
 dropped-reverse-pkt-count  0
 dropped-reverse-byte-count 0
 session-age                00:00:09
 idle-for                   00:00:09
 idle-timeout               240
 pbf-enabled                false
 forward-egress-vrf         LAN1-VRF
 reverse-egress-vrf         LAN1-VRF
 session-provider-zone      0
 forward-offload            false
 reverse-offload            false
 forward-ingress-interface  vni-0/4.600
 forward-egress-interface   ptvi-0/53
 reverse-ingress-interface  ptvi-0/53
 reverse-egress-interface   vni-0/4.600
 forward-fc                 fc_be
 reverse-fc                 fc_be
 forward-plp                high
 reverse-plp                low
 external-service-chaining  false
 is-child                   No
 parent-sess-id             0
 rx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-wan-ckt                 MPLS-WAN:MPLS-WAN
 tx-branch                  -
 pbf-wan-ackt-enc           (E)
 forward-ingress-ckt        vni-0/4.600
 forward-egress-branch      CPE12-HKG-HYBRD-IPC00190
 forward-egress-ckt         MPLS-WAN:MPLS-WAN
 reverse-ingress-branch     CPE12-HKG-HYBRD-IPC00190
 reverse-ingress-ckt        MPLS-WAN:MPLS-WAN
 reverse-egress-ckt         vni-0/4.600
 sdwan-rule-name            policy_rule_11
[ok][2020-10-09 12:42:02]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:19:37.143" endtime="20201009 18:19:37.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:19:37.145" level="INFO">sdwan-rule-name\s+policy_rule_11</msg>
<status status="PASS" starttime="20201009 18:19:37.144" endtime="20201009 18:19:37.145"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:37.146" endtime="20201009 18:19:37.146"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:37.145" endtime="20201009 18:19:37.146"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:37.142" endtime="20201009 18:19:37.147"></status>
</kw>
<kw name="Delete Policy Rule" library="CPE1">
<arguments>
<arg>${plcyrule_1}</arg>
</arguments>
<msg timestamp="20201009 18:19:37.147" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:19:39.991" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:19:39.992" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; Policy rule DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:19:39.992" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:19:37.147" endtime="20201009 18:19:39.992"></status>
</kw>
<doc>Traffic steering based on Application (IPERF)</doc>
<tags>
<tag>P1</tag>
<tag>TS4</tag>
</tags>
<status status="PASS" starttime="20201009 18:18:23.946" endtime="20201009 18:19:39.992" critical="yes"></status>
</test>
<test id="s1-t9" name="NV_SINGLE_CPE_HYBRID_QOS_01">
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:40.898" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:42:06]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:19:39.995" endtime="20201009 18:19:40.898"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:40.898" endtime="20201009 18:19:40.899"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:39.994" endtime="20201009 18:19:40.899"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:42.210" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:19:42.210" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:42:07]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:19:40.905" endtime="20201009 18:19:42.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:42.210" endtime="20201009 18:19:42.211"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:40.905" endtime="20201009 18:19:42.211"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:43.314" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:19:43.314" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:19:42.212" endtime="20201009 18:19:43.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:43.314" endtime="20201009 18:19:43.315"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:42.211" endtime="20201009 18:19:43.316"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:19:52.441" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:19:52.441" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:42:05
# Client: netconf
#
 orgs {
     org-services IPC00190 {
         sd-wan {
             policies {
                 Def...</msg>
<status status="PASS" starttime="20201009 18:19:43.318" endtime="20201009 18:19:52.441"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:19:52.442" endtime="20201009 18:19:52.444"></status>
</kw>
<status status="PASS" starttime="20201009 18:19:43.316" endtime="20201009 18:19:52.444"></status>
</kw>
<kw name="Req Clr Stats Cos Qos Plcy All" library="CPE1">
<status status="PASS" starttime="20201009 18:19:52.445" endtime="20201009 18:19:53.550"></status>
</kw>
<kw name="Show Config Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:19:55.856" level="INFO">show configuration orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | display set | nomore
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination zone zone-list [ ptvi ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set qos-profile Premium
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match dscp [ 26 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set qos-profile Business1
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match dscp [ 18 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set qos-profile Business2
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match dscp [ 10 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set qos-profile Business3
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set qos-profile Internet-Default
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services services-list [ IPSEC IPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services services-list [ IPSEC IPSIPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match source zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match source zone zone-list [ Intf-LAN1-Zone W-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match destination zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN match source zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN set action deny
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT set action deny
[ok][2020-10-09 12:42:21]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:19:53.550" endtime="20201009 18:19:55.856"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:19:57.360" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<status status="PASS" starttime="20201009 18:19:55.857" endtime="20201009 18:19:57.360"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:20:07.362" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:19:57.361" endtime="20201009 18:20:07.362"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${premium_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:08.820" level="INFO">streamblock4
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:07.363" endtime="20201009 18:20:08.820"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business1_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:09.475" level="INFO">streamblock5
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:08.821" endtime="20201009 18:20:09.475"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business2_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:10.177" level="INFO">streamblock6
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:09.475" endtime="20201009 18:20:10.177"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${business3_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:10.850" level="INFO">streamblock7
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:10.178" endtime="20201009 18:20:10.850"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${internet_default_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:11.512" level="INFO">streamblock8
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:10.850" endtime="20201009 18:20:11.512"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:20:21.513" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:20:11.512" endtime="20201009 18:20:21.513"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:20:22.818" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:20:22.818" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:20:21.514" endtime="20201009 18:20:22.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:22.819" endtime="20201009 18:20:22.820"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:21.514" endtime="20201009 18:20:22.821"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:20:24.527" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<msg timestamp="20201009 18:20:24.528" level="INFO">${result} = show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS    ...</msg>
<status status="PASS" starttime="20201009 18:20:22.822" endtime="20201009 18:20:24.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.528" endtime="20201009 18:20:24.530"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Premium\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.540" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Internet-Default  20     0       0      6966     1085146  0        0        0        0        0        
IPSEC_IN                   5      0       0      5        300      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       780      0        0        0        0        0        
WAN_IN                     14     0       0      0        0        14       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:42:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:20:24.539" endtime="20201009 18:20:24.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.541" level="INFO">LAN1-VRF-Premium\s+1</msg>
<status status="PASS" starttime="20201009 18:20:24.540" endtime="20201009 18:20:24.542"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.543" endtime="20201009 18:20:24.546"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.542" endtime="20201009 18:20:24.546"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.532" endtime="20201009 18:20:24.546"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business1\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.548" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Internet-Default  20     0       0      6966     1085146  0        0        0        0        0        
IPSEC_IN                   5      0       0      5        300      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       780      0        0        0        0        0        
WAN_IN                     14     0       0      0        0        14       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:42:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:20:24.548" endtime="20201009 18:20:24.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.549" level="INFO">LAN1-VRF-Business1\s+1</msg>
<status status="PASS" starttime="20201009 18:20:24.549" endtime="20201009 18:20:24.549"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.550" endtime="20201009 18:20:24.551"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.550" endtime="20201009 18:20:24.551"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.547" endtime="20201009 18:20:24.552"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business2\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.556" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Internet-Default  20     0       0      6966     1085146  0        0        0        0        0        
IPSEC_IN                   5      0       0      5        300      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       780      0        0        0        0        0        
WAN_IN                     14     0       0      0        0        14       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:42:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:20:24.555" endtime="20201009 18:20:24.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.556" level="INFO">LAN1-VRF-Business2\s+1</msg>
<status status="PASS" starttime="20201009 18:20:24.556" endtime="20201009 18:20:24.556"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.559" endtime="20201009 18:20:24.559"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.558" endtime="20201009 18:20:24.559"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.552" endtime="20201009 18:20:24.560"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business3\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.562" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Internet-Default  20     0       0      6966     1085146  0        0        0        0        0        
IPSEC_IN                   5      0       0      5        300      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       780      0        0        0        0        0        
WAN_IN                     14     0       0      0        0        14       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:42:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:20:24.562" endtime="20201009 18:20:24.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.563" level="INFO">LAN1-VRF-Business3\s+1</msg>
<status status="PASS" starttime="20201009 18:20:24.562" endtime="20201009 18:20:24.563"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.565" endtime="20201009 18:20:24.565"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.563" endtime="20201009 18:20:24.566"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.560" endtime="20201009 18:20:24.566"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Internet-Default\\s+(\\d{1})</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.568" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Business1         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business2         1      0       0      6946     1083576  0        0        0        0        0        
LAN1-VRF-Business3         1      0       0      6947     1083732  0        0        0        0        0        
LAN1-VRF-Internet-Default  20     0       0      6966     1085146  0        0        0        0        0        
IPSEC_IN                   5      0       0      5        300      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       780      0        0        0        0        0        
WAN_IN                     14     0       0      0        0        14       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:42:50]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:20:24.568" endtime="20201009 18:20:24.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:20:24.569" level="INFO">LAN1-VRF-Internet-Default\s+(\d{1})</msg>
<status status="PASS" starttime="20201009 18:20:24.569" endtime="20201009 18:20:24.569"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:20:24.570" endtime="20201009 18:20:24.571"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.569" endtime="20201009 18:20:24.571"></status>
</kw>
<status status="PASS" starttime="20201009 18:20:24.566" endtime="20201009 18:20:24.572"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${premium_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:34.488" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:24.578" endtime="20201009 18:20:34.488"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business1_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:44.138" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:34.488" endtime="20201009 18:20:44.138"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business2_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:20:53.655" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:44.138" endtime="20201009 18:20:53.655"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${business3_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:21:03.128" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:20:53.655" endtime="20201009 18:21:03.128"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${internet_default_tcp_stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:21:13.835" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:21:03.128" endtime="20201009 18:21:13.835"></status>
</kw>
<doc>DSCP Values based QOS</doc>
<tags>
<tag>QOS</tag>
</tags>
<status status="PASS" starttime="20201009 18:19:39.993" endtime="20201009 18:21:13.835" critical="yes"></status>
</test>
<test id="s1-t10" name="NV_SINGLE_CPE_HYBRID_QOS_02">
<kw name="Modify Qos Device Config" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>qos_ip_based_premium.j2</arg>
<arg>src_address_obj=${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:21:13.839" level="INFO">

STEP :CONFIG QOS
</msg>
<msg timestamp="20201009 18:21:13.850" level="INFO">delete devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source address address-list src_ip_add_obj11

move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first


</msg>
<status status="PASS" starttime="20201009 18:21:13.838" endtime="20201009 18:21:27.490"></status>
</kw>
<kw name="Move Qos Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>LAN1-VRF-Premium</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:21:41.773" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:55:55]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
[ok][2020-10-09 12:55:58]

[edit]
Automated@VDir-BLR-NEW-01% commit
No modifications to commit.
[ok][2020-10-09 12:55:58]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:56:03]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:21:27.491" endtime="20201009 18:21:41.773"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:21:51.776" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:21:41.773" endtime="20201009 18:21:51.776"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:21:52.879" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:44:18]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:21:51.777" endtime="20201009 18:21:52.879"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:21:52.879" endtime="20201009 18:21:52.880"></status>
</kw>
<status status="PASS" starttime="20201009 18:21:51.776" endtime="20201009 18:21:52.880"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:21:54.185" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:21:54.185" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:44:20]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:21:52.881" endtime="20201009 18:21:54.185"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:21:54.186" endtime="20201009 18:21:54.187"></status>
</kw>
<status status="PASS" starttime="20201009 18:21:52.880" endtime="20201009 18:21:54.188"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:21:55.295" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:21:55.295" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:21:54.192" endtime="20201009 18:21:55.295"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:21:55.295" endtime="20201009 18:21:55.296"></status>
</kw>
<status status="PASS" starttime="20201009 18:21:54.190" endtime="20201009 18:21:55.296"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:22:03.826" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:22:03.826" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:43:53
# Client: netconf
#
% No configuration changes found.
[ok][2020-10-09 12:44:29]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:21:55.297" endtime="20201009 18:22:03.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:03.826" endtime="20201009 18:22:03.827"></status>
</kw>
<status status="PASS" starttime="20201009 18:21:55.296" endtime="20201009 18:22:03.827"></status>
</kw>
<kw name="Show Config Object Addresses" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:22:05.532" level="INFO">show configuration orgs org-services IPC00190 objects addresses src_ip_add_obj11 | display set | nomore
set orgs org-services IPC00190 objects addresses src_ip_add_obj11 ipv4-prefix 192.169.101.3/32
[ok][2020-10-09 12:44:31]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:22:03.827" endtime="20201009 18:22:05.532"></status>
</kw>
<kw name="Req Clr Stats Cos Qos Plcy All" library="CPE1">
<status status="PASS" starttime="20201009 18:22:05.533" endtime="20201009 18:22:06.436"></status>
</kw>
<kw name="Show Config Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:22:08.542" level="INFO">show configuration orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | display set | nomore
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source address address-list [ src_ip_add_obj11 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination zone zone-list [ ptvi ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set qos-profile Premium
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match dscp [ 26 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set qos-profile Business1
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match dscp [ 18 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set qos-profile Business2
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match dscp [ 10 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set qos-profile Business3
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set qos-profile Internet-Default
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services services-list [ IPSEC IPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services services-list [ IPSEC IPSIPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match source zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match source zone zone-list [ Intf-LAN1-Zone W-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match destination zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN match source zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN set action deny
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT set action deny
[ok][2020-10-09 12:44:34]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:22:06.436" endtime="20201009 18:22:08.542"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:22:10.046" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<status status="PASS" starttime="20201009 18:22:08.543" endtime="20201009 18:22:10.046"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:22:20.049" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:22:10.047" endtime="20201009 18:22:20.049"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:22:21.431" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:22:20.050" endtime="20201009 18:22:21.431"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:22:31.433" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:22:21.431" endtime="20201009 18:22:31.433"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:22:32.539" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:22:32.540" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:22:31.434" endtime="20201009 18:22:32.540"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:32.540" endtime="20201009 18:22:32.542"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:31.434" endtime="20201009 18:22:32.542"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:22:34.269" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<msg timestamp="20201009 18:22:34.269" level="INFO">${result} = show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS    ...</msg>
<status status="PASS" starttime="20201009 18:22:32.543" endtime="20201009 18:22:34.269"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.271" endtime="20201009 18:22:34.276"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Premium\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.280" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13891    2166996  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  15     0       0      15       1059     0        0        0        0        0        
IPSEC_IN                   2      0       0      2        120      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     12     0       0      12       1120     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:44:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:22:34.279" endtime="20201009 18:22:34.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.281" level="INFO">LAN1-VRF-Premium\s+1</msg>
<status status="PASS" starttime="20201009 18:22:34.280" endtime="20201009 18:22:34.281"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.281" endtime="20201009 18:22:34.282"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.281" endtime="20201009 18:22:34.282"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.277" endtime="20201009 18:22:34.282"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business1\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.285" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13891    2166996  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  15     0       0      15       1059     0        0        0        0        0        
IPSEC_IN                   2      0       0      2        120      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     12     0       0      12       1120     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:44:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:22:34.284" endtime="20201009 18:22:34.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.286" level="INFO">LAN1-VRF-Business1\s+0</msg>
<status status="PASS" starttime="20201009 18:22:34.285" endtime="20201009 18:22:34.286"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.287" endtime="20201009 18:22:34.288"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.286" endtime="20201009 18:22:34.288"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.283" endtime="20201009 18:22:34.289"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business2\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.299" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13891    2166996  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  15     0       0      15       1059     0        0        0        0        0        
IPSEC_IN                   2      0       0      2        120      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     12     0       0      12       1120     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:44:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:22:34.299" endtime="20201009 18:22:34.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.300" level="INFO">LAN1-VRF-Business2\s+0</msg>
<status status="PASS" starttime="20201009 18:22:34.300" endtime="20201009 18:22:34.300"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.301" endtime="20201009 18:22:34.301"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.300" endtime="20201009 18:22:34.301"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.298" endtime="20201009 18:22:34.302"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business3\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.304" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13891    2166996  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  15     0       0      15       1059     0        0        0        0        0        
IPSEC_IN                   2      0       0      2        120      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     12     0       0      12       1120     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:44:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:22:34.303" endtime="20201009 18:22:34.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.304" level="INFO">LAN1-VRF-Business3\s+0</msg>
<status status="PASS" starttime="20201009 18:22:34.304" endtime="20201009 18:22:34.304"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.305" endtime="20201009 18:22:34.306"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.305" endtime="20201009 18:22:34.306"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.302" endtime="20201009 18:22:34.306"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Internet-Default\\s+(\\d{1})</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.311" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13891    2166996  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  15     0       0      15       1059     0        0        0        0        0        
IPSEC_IN                   2      0       0      2        120      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     12     0       0      12       1120     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:44:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:22:34.310" endtime="20201009 18:22:34.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:22:34.311" level="INFO">LAN1-VRF-Internet-Default\s+(\d{1})</msg>
<status status="PASS" starttime="20201009 18:22:34.311" endtime="20201009 18:22:34.311"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:22:34.312" endtime="20201009 18:22:34.312"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.312" endtime="20201009 18:22:34.312"></status>
</kw>
<status status="PASS" starttime="20201009 18:22:34.309" endtime="20201009 18:22:34.313"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:22:44.628" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:22:34.313" endtime="20201009 18:22:44.628"></status>
</kw>
<kw name="Modify Qos Device Config" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>revert_qos_ip_based_premium.j2</arg>
<arg>src_address_obj=${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:22:44.629" level="INFO">

STEP :CONFIG QOS
</msg>
<msg timestamp="20201009 18:22:44.641" level="INFO">
delete devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source address address-list src_ip_add_obj11

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
</msg>
<status status="PASS" starttime="20201009 18:22:44.628" endtime="20201009 18:22:57.278"></status>
</kw>
<kw name="Move Qos Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>LAN1-VRF-Premium</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:23:13.157" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:57:25]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
[ok][2020-10-09 12:57:28]

[edit]
Automated@VDir-BLR-NEW-01% commit
No modifications to commit.
[ok][2020-10-09 12:57:28]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:57:34]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:22:57.279" endtime="20201009 18:23:13.158"></status>
</kw>
<doc>Source IP address Based QOS</doc>
<tags>
<tag>QOS</tag>
</tags>
<status status="PASS" starttime="20201009 18:21:13.836" endtime="20201009 18:23:13.159" critical="yes"></status>
</test>
<test id="s1-t11" name="NV_SINGLE_CPE_HYBRID_QOS_03">
<kw name="Modify Qos Device Config" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>qos_ip_based_premium.j2</arg>
<arg>dst_address_obj=${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:23:13.163" level="INFO">

STEP :CONFIG QOS
</msg>
<msg timestamp="20201009 18:23:13.169" level="INFO">delete devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination address address-list dst_ip_add_obj11

move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first


</msg>
<status status="PASS" starttime="20201009 18:23:13.161" endtime="20201009 18:23:26.807"></status>
</kw>
<kw name="Move Qos Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>LAN1-VRF-Premium</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:23:41.190" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:57:54]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
[ok][2020-10-09 12:57:58]

[edit]
Automated@VDir-BLR-NEW-01% commit
No modifications to commit.
[ok][2020-10-09 12:57:58]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:58:02]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:23:26.808" endtime="20201009 18:23:41.190"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:23:51.191" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:23:41.191" endtime="20201009 18:23:51.191"></status>
</kw>
<kw name="REQ CLR SESSION ALL">
<kw name="Req Clr Sess All" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:23:52.095" level="INFO">${result} = request clear sessions all
[ok][2020-10-09 12:46:17]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:23:51.192" endtime="20201009 18:23:52.095"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:23:52.096" endtime="20201009 18:23:52.098"></status>
</kw>
<status status="PASS" starttime="20201009 18:23:51.192" endtime="20201009 18:23:52.098"></status>
</kw>
<kw name="SHOW SESSION SDWAN DETAIL">
<kw name="Show Session Sdwan Detail" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:23:53.405" level="INFO">show orgs org IPC00190 sessions sdwan detail | nomore</msg>
<msg timestamp="20201009 18:23:53.405" level="INFO">${result} = show orgs org IPC00190 sessions sdwan detail | nomore
% No entries found.
[ok][2020-10-09 12:46:19]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:23:52.101" endtime="20201009 18:23:53.406"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:23:53.406" endtime="20201009 18:23:53.406"></status>
</kw>
<status status="PASS" starttime="20201009 18:23:52.100" endtime="20201009 18:23:53.407"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:23:54.512" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:23:54.512" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                      
                     ...</msg>
<status status="PASS" starttime="20201009 18:23:53.408" endtime="20201009 18:23:54.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:23:54.513" endtime="20201009 18:23:54.514"></status>
</kw>
<status status="PASS" starttime="20201009 18:23:53.408" endtime="20201009 18:23:54.515"></status>
</kw>
<kw name="SHOW COMMIT CHANGES 0">
<kw name="Show Commit Changes 0" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:24:02.839" level="INFO">show commit changes 0 | nomore</msg>
<msg timestamp="20201009 18:24:02.839" level="INFO">${result} = show commit changes 0 | nomore
#
# Created by: admin
# Date: 2020-10-09 12:45:52
# Client: netconf
#
% No configuration changes found.
[ok][2020-10-09 12:46:28]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:23:54.518" endtime="20201009 18:24:02.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:02.840" endtime="20201009 18:24:02.840"></status>
</kw>
<status status="PASS" starttime="20201009 18:23:54.516" endtime="20201009 18:24:02.840"></status>
</kw>
<kw name="Show Config Object Addresses" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:24:04.544" level="INFO">show configuration orgs org-services IPC00190 objects addresses dst_ip_add_obj11 | display set | nomore
set orgs org-services IPC00190 objects addresses dst_ip_add_obj11 ipv4-prefix 192.169.111.3/32
[ok][2020-10-09 12:46:30]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:24:02.841" endtime="20201009 18:24:04.544"></status>
</kw>
<kw name="Req Clr Stats Cos Qos Plcy All" library="CPE1">
<status status="PASS" starttime="20201009 18:24:04.545" endtime="20201009 18:24:05.650"></status>
</kw>
<kw name="Show Config Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:24:07.758" level="INFO">show configuration orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | display set | nomore
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination zone zone-list [ ptvi ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination address address-list [ dst_ip_add_obj11 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium set qos-profile Premium
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 match dscp [ 26 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business1 set qos-profile Business1
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 match dscp [ 18 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business2 set qos-profile Business2
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 match dscp [ 10 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Business3 set qos-profile Business3
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default match source zone zone-list [ Intf-LAN1-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Internet-Default set qos-profile Internet-Default
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN match services services-list [ IPSEC IPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services predefined-services-list [ ESP ICMP ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT match services services-list [ IPSEC IPSIPSecAH ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules IPSEC_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT match ether-type ARP
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules ARP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match source zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match destination zone zone-list [ Intf-INT-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT match services services-list [ DHCP-67 DHCP-68 ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules DHCP_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match source zone zone-list [ Intf-LAN1-Zone W-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT match destination zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_OUT set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN match source zone zone-list [ Intf-INT-WAN-Zone L-ST-LAN1-VRF-INT-WAN ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules INT_IN set action allow
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN match source zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_IN set action deny
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT match destination zone zone-list [ Intf-INT-WAN-Zone Intf-MPLS-WAN-Zone ]
set orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules WAN_OUT set action deny
[ok][2020-10-09 12:46:33]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt;</msg>
<status status="PASS" starttime="20201009 18:24:05.651" endtime="20201009 18:24:07.759"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<msg timestamp="20201009 18:24:09.264" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<status status="PASS" starttime="20201009 18:24:07.760" endtime="20201009 18:24:09.264"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:24:19.266" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:24:09.265" endtime="20201009 18:24:19.266"></status>
</kw>
<kw name="Start Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:24:20.613" level="INFO">streamblock1
***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:24:19.266" endtime="20201009 18:24:20.613"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10s</arg>
</arguments>
<msg timestamp="20201009 18:24:30.614" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20201009 18:24:20.613" endtime="20201009 18:24:30.614"></status>
</kw>
<kw name="SHOW INTERFACE PORT STATISTICS BRIEF">
<kw name="Show Intf Port Stats Br" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:24:31.720" level="INFO">show interfaces port statistics brief | tab | nomore</msg>
<msg timestamp="20201009 18:24:31.720" level="INFO">${result} = show interfaces port statistics brief | tab | nomore
                     IF                                                                                                            
               ...</msg>
<status status="PASS" starttime="20201009 18:24:30.615" endtime="20201009 18:24:31.720"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:31.720" endtime="20201009 18:24:31.721"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:30.615" endtime="20201009 18:24:31.721"></status>
</kw>
<kw name="Show Cos Qos Policy Rules" library="CPE1">
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20201009 18:24:33.225" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore</msg>
<msg timestamp="20201009 18:24:33.225" level="INFO">${result} = show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS    ...</msg>
<status status="PASS" starttime="20201009 18:24:31.722" endtime="20201009 18:24:33.225"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.226" endtime="20201009 18:24:33.228"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Premium\\s+1</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.230" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13892    2167152  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  17     0       0      17       1249     0        0        0        0        0        
IPSEC_IN                   4      0       0      4        240      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       1180     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:46:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:24:33.229" endtime="20201009 18:24:33.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.231" level="INFO">LAN1-VRF-Premium\s+1</msg>
<status status="PASS" starttime="20201009 18:24:33.230" endtime="20201009 18:24:33.231"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.231" endtime="20201009 18:24:33.232"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.231" endtime="20201009 18:24:33.232"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.228" endtime="20201009 18:24:33.233"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business1\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.235" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13892    2167152  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  17     0       0      17       1249     0        0        0        0        0        
IPSEC_IN                   4      0       0      4        240      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       1180     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:46:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:24:33.234" endtime="20201009 18:24:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.236" level="INFO">LAN1-VRF-Business1\s+0</msg>
<status status="PASS" starttime="20201009 18:24:33.236" endtime="20201009 18:24:33.236"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.237" endtime="20201009 18:24:33.238"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.236" endtime="20201009 18:24:33.238"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.233" endtime="20201009 18:24:33.238"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business2\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.240" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13892    2167152  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  17     0       0      17       1249     0        0        0        0        0        
IPSEC_IN                   4      0       0      4        240      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       1180     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:46:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:24:33.240" endtime="20201009 18:24:33.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.241" level="INFO">LAN1-VRF-Business2\s+0</msg>
<status status="PASS" starttime="20201009 18:24:33.241" endtime="20201009 18:24:33.241"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.242" endtime="20201009 18:24:33.243"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.241" endtime="20201009 18:24:33.243"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.239" endtime="20201009 18:24:33.243"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Business3\\s+0</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.245" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13892    2167152  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  17     0       0      17       1249     0        0        0        0        0        
IPSEC_IN                   4      0       0      4        240      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       1180     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:46:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:24:33.245" endtime="20201009 18:24:33.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.245" level="INFO">LAN1-VRF-Business3\s+0</msg>
<status status="PASS" starttime="20201009 18:24:33.245" endtime="20201009 18:24:33.246"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.246" endtime="20201009 18:24:33.246"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.246" endtime="20201009 18:24:33.246"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.244" endtime="20201009 18:24:33.247"></status>
</kw>
<kw name="CHECK RESULT">
<doc>Check result contains expected value</doc>
<arguments>
<arg>actual=${result}</arg>
<arg>expected=LAN1-VRF-Internet-Default\\s+(\\d{1})</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${actual}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.248" level="INFO">show orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules | tab | nomore
                                  QOS     QOS    QOS      QOS      QOS      PPS      PPS      KBPS     KBPS     
                           QOS    DROP    DROP   FORWARD  FORWARD  SESSION  POLICER  POLICER  POLICER  POLICER  
                           HIT    PACKET  BYTE   PACKET   BYTE     DENY     PKTS     BYTES    PKTS     BYTES    
RULE NAME                  COUNT  COUNT   COUNT  COUNT    COUNT    COUNT    DROPPED  DROPPED  DROPPED  DROPPED  
----------------------------------------------------------------------------------------------------------------
LAN1-VRF-Premium           1      0       0      13892    2167152  0        0        0        0        0        
LAN1-VRF-Business1         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business2         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Business3         0      0       0      0        0        0        0        0        0        0        
LAN1-VRF-Internet-Default  17     0       0      17       1249     0        0        0        0        0        
IPSEC_IN                   4      0       0      4        240      0        0        0        0        0        
IPSEC_OUT                  0      0       0      0        0        0        0        0        0        0        
ARP_IN                     0      0       0      0        0        0        0        0        0        0        
ARP_OUT                    0      0       0      0        0        0        0        0        0        0        
DHCP_IN                    0      0       0      0        0        0        0        0        0        0        
DHCP_OUT                   0      0       0      0        0        0        0        0        0        0        
INT_OUT                    0      0       0      0        0        0        0        0        0        0        
INT_IN                     13     0       0      13       1180     0        0        0        0        0        
WAN_IN                     13     0       0      0        0        13       0        0        0        0        
WAN_OUT                    0      0       0      0        0        0        0        0        0        0        

[ok][2020-10-09 12:46:59]
admin@CPE11-HKG-HYBRD-IPC00190-cli&gt; </msg>
<status status="PASS" starttime="20201009 18:24:33.248" endtime="20201009 18:24:33.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${expected}</arg>
</arguments>
<msg timestamp="20201009 18:24:33.249" level="INFO">LAN1-VRF-Internet-Default\s+(\d{1})</msg>
<status status="PASS" starttime="20201009 18:24:33.248" endtime="20201009 18:24:33.249"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>should match regexp</arg>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${actual}</arg>
<arg>${expected}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:24:33.250" endtime="20201009 18:24:33.251"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.249" endtime="20201009 18:24:33.251"></status>
</kw>
<status status="PASS" starttime="20201009 18:24:33.247" endtime="20201009 18:24:33.252"></status>
</kw>
<kw name="Stop Stream Traffic" library="spirent1">
<arguments>
<arg>${stream1['stream_id']}</arg>
</arguments>
<msg timestamp="20201009 18:24:47.109" level="INFO">***** run sth.traffic_control successfully</msg>
<status status="PASS" starttime="20201009 18:24:33.254" endtime="20201009 18:24:47.109"></status>
</kw>
<kw name="Modify Qos Device Config" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>revert_qos_ip_based_premium.j2</arg>
<arg>dst_address_obj=${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:24:47.110" level="INFO">

STEP :CONFIG QOS
</msg>
<msg timestamp="20201009 18:24:47.113" level="INFO">
delete devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match destination address address-list dst_ip_add_obj11

set devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium match dscp [ 46 ]
move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
</msg>
<status status="PASS" starttime="20201009 18:24:47.109" endtime="20201009 18:25:00.352"></status>
</kw>
<kw name="Move Qos Policy Rule" library="VD1">
<arguments>
<arg>${CPE1['Device_name']}</arg>
<arg>${cpe1['ORG_NAME']}</arg>
<arg>Default-Policy</arg>
<arg>LAN1-VRF-Premium</arg>
<arg>first</arg>
</arguments>
<msg timestamp="20201009 18:25:14.738" level="INFO">configure private
Entering configuration mode private
[ok][2020-10-09 12:59:28]

[edit]
Automated@VDir-BLR-NEW-01% move devices device CPE11-HKG-HYBRD-IPC00190 config orgs org-services IPC00190 class-of-service qos-policies Default-Policy rules LAN1-VRF-Premium first
[ok][2020-10-09 12:59:31]

[edit]
Automated@VDir-BLR-NEW-01% commit
No modifications to commit.
[ok][2020-10-09 12:59:31]

[edit]
Automated@VDir-BLR-NEW-01% exit configuration-mode
[ok][2020-10-09 12:59:36]
Automated@VDir-BLR-NEW-01&gt;</msg>
<status status="PASS" starttime="20201009 18:25:00.353" endtime="20201009 18:25:14.738"></status>
</kw>
<doc>Destination IP address Based QOS</doc>
<tags>
<tag>QOS</tag>
</tags>
<status status="PASS" starttime="20201009 18:23:13.160" endtime="20201009 18:25:14.739" critical="yes"></status>
</test>
<kw name="CLEANUP" type="teardown">
<kw name="DELETE FWD PROFILE">
<kw name="Delete Service Object" library="CPE1">
<arguments>
<arg>${serviceobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:25:14.743" level="INFO">
DELETE Service Object
</msg>
<msg timestamp="20201009 18:25:17.559" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:25:17.559" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:25:17.560" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:25:14.742" endtime="20201009 18:25:17.560"></status>
</kw>
<kw name="Delete Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_1}</arg>
</arguments>
<msg timestamp="20201009 18:25:17.560" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:25:19.223" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:25:19.224" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:25:19.224" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:25:17.560" endtime="20201009 18:25:19.224"></status>
</kw>
<kw name="Delete Address Object" library="CPE1">
<arguments>
<arg>${ipaddobj_2}</arg>
</arguments>
<msg timestamp="20201009 18:25:19.224" level="INFO">
DELETE IPaddress Object
</msg>
<msg timestamp="20201009 18:25:21.136" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:25:21.136" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; ADDRESS OBJECT DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:25:21.136" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:25:19.224" endtime="20201009 18:25:21.137"></status>
</kw>
<kw name="Delete Fowarding Profile" library="CPE1">
<arguments>
<arg>${fwp_1}</arg>
</arguments>
<msg timestamp="20201009 18:25:21.137" level="INFO">
DELETE FWD PROFILE
</msg>
<msg timestamp="20201009 18:25:23.018" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:25:23.018" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; FORWARDING PROFILE DELETION PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:25:23.018" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:25:21.137" endtime="20201009 18:25:23.019"></status>
</kw>
<kw name="Delete Sla Profile" library="CPE1">
<arguments>
<arg>${sla_prf_1}</arg>
</arguments>
<msg timestamp="20201009 18:25:23.019" level="INFO">
DELETE SLA profile
</msg>
<msg timestamp="20201009 18:25:24.841" level="INFO">
PASS</msg>
<msg timestamp="20201009 18:25:24.841" level="INFO">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; DELETE SLA Profile PASSED. &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</msg>
<msg timestamp="20201009 18:25:24.841" level="INFO">&lt;Response [204]&gt;</msg>
<status status="PASS" starttime="20201009 18:25:23.019" endtime="20201009 18:25:24.841"></status>
</kw>
<kw name="Get Vni Interface Bw" library="CPE1">
<arguments>
<arg>${CPE1['WAN1_INTF']}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:25:24.841" endtime="20201009 18:25:25.345"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:14.742" endtime="20201009 18:25:25.345"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>"cleanup done"</arg>
</arguments>
<status status="PASS" starttime="20201009 18:25:25.345" endtime="20201009 18:25:25.346"></status>
</kw>
<kw name="Release Ports" library="spirent1">
<msg timestamp="20201009 18:25:26.699" level="INFO">Release resources
***** run sth.interface_config_delete successfully
***** run sth.interface_config_delete successfully
***** run sth.cleanup_session successfully</msg>
<status status="PASS" starttime="20201009 18:25:25.347" endtime="20201009 18:25:26.699"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${VM1['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20201009 18:25:26.701" level="INFO">${gw} = 192.169.101.1</msg>
<status status="PASS" starttime="20201009 18:25:26.700" endtime="20201009 18:25:26.701"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20201009 18:25:26.702" level="INFO">${vlan} = 600</msg>
<status status="PASS" starttime="20201009 18:25:26.701" endtime="20201009 18:25:26.702"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20201009 18:25:26.703" level="INFO">${destination_nw} = 192.169.111.0/24</msg>
<status status="PASS" starttime="20201009 18:25:26.703" endtime="20201009 18:25:26.703"></status>
</kw>
<kw name="Send Commands And Expect" library="VM1">
<arguments>
<arg>sudo ip route del ${destination_nw} via ${gw} dev ${VM1['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:25:26.704" endtime="20201009 18:25:27.320"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:26.700" endtime="20201009 18:25:27.320"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:26.699" endtime="20201009 18:25:27.320"></status>
</kw>
<kw name="${i} IN RANGE [ 1 | ${VM2['NO_OF_VRFS']} + 1 ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['first_host']}</arg>
</arguments>
<assign>
<var>${gw}</var>
</assign>
<msg timestamp="20201009 18:25:27.322" level="INFO">${gw} = 192.169.111.1</msg>
<status status="PASS" starttime="20201009 18:25:27.322" endtime="20201009 18:25:27.322"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM2['lan'][${i}]['vlan']}</arg>
</arguments>
<assign>
<var>${vlan}</var>
</assign>
<msg timestamp="20201009 18:25:27.323" level="INFO">${vlan} = 610</msg>
<status status="PASS" starttime="20201009 18:25:27.322" endtime="20201009 18:25:27.323"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${VM1['lan'][${i}]['nw']}</arg>
</arguments>
<assign>
<var>${destination_nw}</var>
</assign>
<msg timestamp="20201009 18:25:27.323" level="INFO">${destination_nw} = 192.169.101.0/24</msg>
<status status="PASS" starttime="20201009 18:25:27.323" endtime="20201009 18:25:27.324"></status>
</kw>
<kw name="Send Commands And Expect" library="VM2">
<arguments>
<arg>sudo ip route del ${destination_nw} via ${gw} dev ${VM2['LAN_INTF']}.${vlan}</arg>
</arguments>
<status status="PASS" starttime="20201009 18:25:27.324" endtime="20201009 18:25:28.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:27.321" endtime="20201009 18:25:28.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:27.321" endtime="20201009 18:25:28.040"></status>
</kw>
<status status="PASS" starttime="20201009 18:25:14.741" endtime="20201009 18:25:28.040"></status>
</kw>
<doc>A test suite with tests for SDWAN SINGLE CPE Solution.
Topology:-
____________________________
| VersaDirector |
|___________________________|
|
|
|
_____________|_______________
| WanCtrller1 |
|____________________________|
| |
| |
| |
INTERNET/MPLS
| |
| |___
______|__ ___|___
| | | |
LAN1--+ CPE1 | | CPE2 +--LAN1
|________| |_______|


Testplan Goals:-
1. CHECK WAN INTERFACES STATUS.
2. CHECK BGP NEIGHBOR STATUS.
3. CHECK LAN ROUTE.
4. Ping Test.
5. IPERF Test.
6. Traffic steering Test.
7. QOS Test.</doc>
<metadata>
<item name="Version">1.0
More Info For more information about Robot Framework see http://robotframework.org
Author Sathishkumar murugesan
Date 12 Dec 2017
Executed At HOST
Test Framework Robot Framework Python</item>
</metadata>
<status status="PASS" starttime="20201009 18:03:29.198" endtime="20201009 18:25:28.040"></status>
</suite>
<statistics>
<total>
<stat pass="11" fail="0">Critical Tests</stat>
<stat pass="11" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0">IPERF</stat>
<stat pass="4" fail="0">P1</stat>
<stat pass="2" fail="0">PING</stat>
<stat pass="3" fail="0">QOS</stat>
<stat pass="1" fail="0">SANITY01</stat>
<stat pass="1" fail="0">TS1</stat>
<stat pass="1" fail="0">TS2</stat>
<stat pass="1" fail="0">TS3</stat>
<stat pass="1" fail="0">TS4</stat>
</tag>
<suite>
<stat pass="11" fail="0" id="s1" name="SINGLE CPE HYBRID SOLUTION TEST">SINGLE CPE HYBRID SOLUTION TEST</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
